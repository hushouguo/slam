// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server.proto

#ifndef PROTOBUF_INCLUDED_server_2eproto
#define PROTOBUF_INCLUDED_server_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "entity.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_server_2eproto 

namespace protobuf_server_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[9];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_server_2eproto
namespace protocol {
class ServerRegisterRequest;
class ServerRegisterRequestDefaultTypeInternal;
extern ServerRegisterRequestDefaultTypeInternal _ServerRegisterRequest_default_instance_;
class ServerRegisterResponse;
class ServerRegisterResponseDefaultTypeInternal;
extern ServerRegisterResponseDefaultTypeInternal _ServerRegisterResponse_default_instance_;
class ServerRetrieveRequest;
class ServerRetrieveRequestDefaultTypeInternal;
extern ServerRetrieveRequestDefaultTypeInternal _ServerRetrieveRequest_default_instance_;
class ServerRetrieveResponse;
class ServerRetrieveResponseDefaultTypeInternal;
extern ServerRetrieveResponseDefaultTypeInternal _ServerRetrieveResponse_default_instance_;
class StorageContext;
class StorageContextDefaultTypeInternal;
extern StorageContextDefaultTypeInternal _StorageContext_default_instance_;
class StorageSerializeRequest;
class StorageSerializeRequestDefaultTypeInternal;
extern StorageSerializeRequestDefaultTypeInternal _StorageSerializeRequest_default_instance_;
class StorageSerializeResponse;
class StorageSerializeResponseDefaultTypeInternal;
extern StorageSerializeResponseDefaultTypeInternal _StorageSerializeResponse_default_instance_;
class StorageUnserializeRequest;
class StorageUnserializeRequestDefaultTypeInternal;
extern StorageUnserializeRequestDefaultTypeInternal _StorageUnserializeRequest_default_instance_;
class StorageUnserializeResponse;
class StorageUnserializeResponseDefaultTypeInternal;
extern StorageUnserializeResponseDefaultTypeInternal _StorageUnserializeResponse_default_instance_;
}  // namespace protocol
namespace google {
namespace protobuf {
template<> ::protocol::ServerRegisterRequest* Arena::CreateMaybeMessage<::protocol::ServerRegisterRequest>(Arena*);
template<> ::protocol::ServerRegisterResponse* Arena::CreateMaybeMessage<::protocol::ServerRegisterResponse>(Arena*);
template<> ::protocol::ServerRetrieveRequest* Arena::CreateMaybeMessage<::protocol::ServerRetrieveRequest>(Arena*);
template<> ::protocol::ServerRetrieveResponse* Arena::CreateMaybeMessage<::protocol::ServerRetrieveResponse>(Arena*);
template<> ::protocol::StorageContext* Arena::CreateMaybeMessage<::protocol::StorageContext>(Arena*);
template<> ::protocol::StorageSerializeRequest* Arena::CreateMaybeMessage<::protocol::StorageSerializeRequest>(Arena*);
template<> ::protocol::StorageSerializeResponse* Arena::CreateMaybeMessage<::protocol::StorageSerializeResponse>(Arena*);
template<> ::protocol::StorageUnserializeRequest* Arena::CreateMaybeMessage<::protocol::StorageUnserializeRequest>(Arena*);
template<> ::protocol::StorageUnserializeResponse* Arena::CreateMaybeMessage<::protocol::StorageUnserializeResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace protocol {

enum SMSGID {
  SMSGID_BASE = 0,
  SMSGID_SERVER_REGISTER_REQ = 60000,
  SMSGID_SERVER_REGISTER_REP = 60001,
  SMSGID_SERVER_RETRIEVE_REQ = 60002,
  SMSGID_SERVER_RETRIEVE_REP = 60003,
  SMSGID_STORAGE_SERIALIZE_REQ = 60010,
  SMSGID_STORAGE_SERIALIZE_REP = 60011,
  SMSGID_STORAGE_UNSERIALIZE_REQ = 60012,
  SMSGID_STORAGE_UNSERIALIZE_REP = 60013,
  SMSGID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SMSGID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SMSGID_IsValid(int value);
const SMSGID SMSGID_MIN = SMSGID_BASE;
const SMSGID SMSGID_MAX = SMSGID_STORAGE_UNSERIALIZE_REP;
const int SMSGID_ARRAYSIZE = SMSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SMSGID_descriptor();
inline const ::std::string& SMSGID_Name(SMSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SMSGID_descriptor(), value);
}
inline bool SMSGID_Parse(
    const ::std::string& name, SMSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SMSGID>(
    SMSGID_descriptor(), name, value);
}
enum SERVER_TYPE {
  SERVER_TYPE_NONE = 0,
  SERVER_TYPE_GATEWAY = 1,
  SERVER_TYPE_SCENE = 2,
  SERVER_TYPE_CENTRAL = 3,
  SERVER_TYPE_STORAGE = 4,
  SERVER_TYPE_ROBOT = 5,
  SERVER_TYPE_ORDER = 6,
  SERVER_TYPE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SERVER_TYPE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SERVER_TYPE_IsValid(int value);
const SERVER_TYPE SERVER_TYPE_MIN = SERVER_TYPE_NONE;
const SERVER_TYPE SERVER_TYPE_MAX = SERVER_TYPE_ORDER;
const int SERVER_TYPE_ARRAYSIZE = SERVER_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* SERVER_TYPE_descriptor();
inline const ::std::string& SERVER_TYPE_Name(SERVER_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    SERVER_TYPE_descriptor(), value);
}
inline bool SERVER_TYPE_Parse(
    const ::std::string& name, SERVER_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SERVER_TYPE>(
    SERVER_TYPE_descriptor(), name, value);
}
// ===================================================================

class ServerRegisterRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.ServerRegisterRequest) */ {
 public:
  ServerRegisterRequest();
  virtual ~ServerRegisterRequest();

  ServerRegisterRequest(const ServerRegisterRequest& from);

  inline ServerRegisterRequest& operator=(const ServerRegisterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerRegisterRequest(ServerRegisterRequest&& from) noexcept
    : ServerRegisterRequest() {
    *this = ::std::move(from);
  }

  inline ServerRegisterRequest& operator=(ServerRegisterRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerRegisterRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ServerRegisterRequest* internal_default_instance() {
    return reinterpret_cast<const ServerRegisterRequest*>(
               &_ServerRegisterRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ServerRegisterRequest* other);
  friend void swap(ServerRegisterRequest& a, ServerRegisterRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerRegisterRequest* New() const final {
    return CreateMaybeMessage<ServerRegisterRequest>(NULL);
  }

  ServerRegisterRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ServerRegisterRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ServerRegisterRequest& from);
  void MergeFrom(const ServerRegisterRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerRegisterRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.SERVER_TYPE svrtype = 1;
  void clear_svrtype();
  static const int kSvrtypeFieldNumber = 1;
  ::protocol::SERVER_TYPE svrtype() const;
  void set_svrtype(::protocol::SERVER_TYPE value);

  // int32 port = 2;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // int32 shardid = 3;
  void clear_shardid();
  static const int kShardidFieldNumber = 3;
  ::google::protobuf::int32 shardid() const;
  void set_shardid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.ServerRegisterRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int svrtype_;
  ::google::protobuf::int32 port_;
  ::google::protobuf::int32 shardid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerRegisterResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.ServerRegisterResponse) */ {
 public:
  ServerRegisterResponse();
  virtual ~ServerRegisterResponse();

  ServerRegisterResponse(const ServerRegisterResponse& from);

  inline ServerRegisterResponse& operator=(const ServerRegisterResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerRegisterResponse(ServerRegisterResponse&& from) noexcept
    : ServerRegisterResponse() {
    *this = ::std::move(from);
  }

  inline ServerRegisterResponse& operator=(ServerRegisterResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerRegisterResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ServerRegisterResponse* internal_default_instance() {
    return reinterpret_cast<const ServerRegisterResponse*>(
               &_ServerRegisterResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ServerRegisterResponse* other);
  friend void swap(ServerRegisterResponse& a, ServerRegisterResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerRegisterResponse* New() const final {
    return CreateMaybeMessage<ServerRegisterResponse>(NULL);
  }

  ServerRegisterResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ServerRegisterResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ServerRegisterResponse& from);
  void MergeFrom(const ServerRegisterResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerRegisterResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool rc = 1;
  void clear_rc();
  static const int kRcFieldNumber = 1;
  bool rc() const;
  void set_rc(bool value);

  // .protocol.SERVER_TYPE svrtype = 2;
  void clear_svrtype();
  static const int kSvrtypeFieldNumber = 2;
  ::protocol::SERVER_TYPE svrtype() const;
  void set_svrtype(::protocol::SERVER_TYPE value);

  // @@protoc_insertion_point(class_scope:protocol.ServerRegisterResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool rc_;
  int svrtype_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerRetrieveRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.ServerRetrieveRequest) */ {
 public:
  ServerRetrieveRequest();
  virtual ~ServerRetrieveRequest();

  ServerRetrieveRequest(const ServerRetrieveRequest& from);

  inline ServerRetrieveRequest& operator=(const ServerRetrieveRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerRetrieveRequest(ServerRetrieveRequest&& from) noexcept
    : ServerRetrieveRequest() {
    *this = ::std::move(from);
  }

  inline ServerRetrieveRequest& operator=(ServerRetrieveRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerRetrieveRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ServerRetrieveRequest* internal_default_instance() {
    return reinterpret_cast<const ServerRetrieveRequest*>(
               &_ServerRetrieveRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ServerRetrieveRequest* other);
  friend void swap(ServerRetrieveRequest& a, ServerRetrieveRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerRetrieveRequest* New() const final {
    return CreateMaybeMessage<ServerRetrieveRequest>(NULL);
  }

  ServerRetrieveRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ServerRetrieveRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ServerRetrieveRequest& from);
  void MergeFrom(const ServerRetrieveRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerRetrieveRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.SERVER_TYPE svrtype = 1;
  void clear_svrtype();
  static const int kSvrtypeFieldNumber = 1;
  ::protocol::SERVER_TYPE svrtype() const;
  void set_svrtype(::protocol::SERVER_TYPE value);

  // @@protoc_insertion_point(class_scope:protocol.ServerRetrieveRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int svrtype_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerRetrieveResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.ServerRetrieveResponse) */ {
 public:
  ServerRetrieveResponse();
  virtual ~ServerRetrieveResponse();

  ServerRetrieveResponse(const ServerRetrieveResponse& from);

  inline ServerRetrieveResponse& operator=(const ServerRetrieveResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerRetrieveResponse(ServerRetrieveResponse&& from) noexcept
    : ServerRetrieveResponse() {
    *this = ::std::move(from);
  }

  inline ServerRetrieveResponse& operator=(ServerRetrieveResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerRetrieveResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ServerRetrieveResponse* internal_default_instance() {
    return reinterpret_cast<const ServerRetrieveResponse*>(
               &_ServerRetrieveResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ServerRetrieveResponse* other);
  friend void swap(ServerRetrieveResponse& a, ServerRetrieveResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerRetrieveResponse* New() const final {
    return CreateMaybeMessage<ServerRetrieveResponse>(NULL);
  }

  ServerRetrieveResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ServerRetrieveResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ServerRetrieveResponse& from);
  void MergeFrom(const ServerRetrieveResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerRetrieveResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 servers = 2;
  int servers_size() const;
  void clear_servers();
  static const int kServersFieldNumber = 2;
  ::google::protobuf::uint64 servers(int index) const;
  void set_servers(int index, ::google::protobuf::uint64 value);
  void add_servers(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      servers() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_servers();

  // .protocol.SERVER_TYPE svrtype = 1;
  void clear_svrtype();
  static const int kSvrtypeFieldNumber = 1;
  ::protocol::SERVER_TYPE svrtype() const;
  void set_svrtype(::protocol::SERVER_TYPE value);

  // @@protoc_insertion_point(class_scope:protocol.ServerRetrieveResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > servers_;
  mutable int _servers_cached_byte_size_;
  int svrtype_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StorageContext : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.StorageContext) */ {
 public:
  StorageContext();
  virtual ~StorageContext();

  StorageContext(const StorageContext& from);

  inline StorageContext& operator=(const StorageContext& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StorageContext(StorageContext&& from) noexcept
    : StorageContext() {
    *this = ::std::move(from);
  }

  inline StorageContext& operator=(StorageContext&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StorageContext& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StorageContext* internal_default_instance() {
    return reinterpret_cast<const StorageContext*>(
               &_StorageContext_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(StorageContext* other);
  friend void swap(StorageContext& a, StorageContext& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StorageContext* New() const final {
    return CreateMaybeMessage<StorageContext>(NULL);
  }

  StorageContext* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StorageContext>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StorageContext& from);
  void MergeFrom(const StorageContext& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StorageContext* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 client = 1;
  void clear_client();
  static const int kClientFieldNumber = 1;
  ::google::protobuf::uint32 client() const;
  void set_client(::google::protobuf::uint32 value);

  // uint32 gatewayserver = 2;
  void clear_gatewayserver();
  static const int kGatewayserverFieldNumber = 2;
  ::google::protobuf::uint32 gatewayserver() const;
  void set_gatewayserver(::google::protobuf::uint32 value);

  // uint32 sceneserver = 3;
  void clear_sceneserver();
  static const int kSceneserverFieldNumber = 3;
  ::google::protobuf::uint32 sceneserver() const;
  void set_sceneserver(::google::protobuf::uint32 value);

  // uint32 flags = 4;
  void clear_flags();
  static const int kFlagsFieldNumber = 4;
  ::google::protobuf::uint32 flags() const;
  void set_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.StorageContext)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 client_;
  ::google::protobuf::uint32 gatewayserver_;
  ::google::protobuf::uint32 sceneserver_;
  ::google::protobuf::uint32 flags_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StorageSerializeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.StorageSerializeRequest) */ {
 public:
  StorageSerializeRequest();
  virtual ~StorageSerializeRequest();

  StorageSerializeRequest(const StorageSerializeRequest& from);

  inline StorageSerializeRequest& operator=(const StorageSerializeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StorageSerializeRequest(StorageSerializeRequest&& from) noexcept
    : StorageSerializeRequest() {
    *this = ::std::move(from);
  }

  inline StorageSerializeRequest& operator=(StorageSerializeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StorageSerializeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StorageSerializeRequest* internal_default_instance() {
    return reinterpret_cast<const StorageSerializeRequest*>(
               &_StorageSerializeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(StorageSerializeRequest* other);
  friend void swap(StorageSerializeRequest& a, StorageSerializeRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StorageSerializeRequest* New() const final {
    return CreateMaybeMessage<StorageSerializeRequest>(NULL);
  }

  StorageSerializeRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StorageSerializeRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StorageSerializeRequest& from);
  void MergeFrom(const StorageSerializeRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StorageSerializeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string table = 2;
  void clear_table();
  static const int kTableFieldNumber = 2;
  const ::std::string& table() const;
  void set_table(const ::std::string& value);
  #if LANG_CXX11
  void set_table(::std::string&& value);
  #endif
  void set_table(const char* value);
  void set_table(const char* value, size_t size);
  ::std::string* mutable_table();
  ::std::string* release_table();
  void set_allocated_table(::std::string* table);

  // .protocol.Entity entity = 3;
  bool has_entity() const;
  void clear_entity();
  static const int kEntityFieldNumber = 3;
  private:
  const ::protocol::Entity& _internal_entity() const;
  public:
  const ::protocol::Entity& entity() const;
  ::protocol::Entity* release_entity();
  ::protocol::Entity* mutable_entity();
  void set_allocated_entity(::protocol::Entity* entity);

  // .protocol.StorageContext context = 4;
  bool has_context() const;
  void clear_context();
  static const int kContextFieldNumber = 4;
  private:
  const ::protocol::StorageContext& _internal_context() const;
  public:
  const ::protocol::StorageContext& context() const;
  ::protocol::StorageContext* release_context();
  ::protocol::StorageContext* mutable_context();
  void set_allocated_context(::protocol::StorageContext* context);

  // uint32 shard = 1;
  void clear_shard();
  static const int kShardFieldNumber = 1;
  ::google::protobuf::uint32 shard() const;
  void set_shard(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.StorageSerializeRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr table_;
  ::protocol::Entity* entity_;
  ::protocol::StorageContext* context_;
  ::google::protobuf::uint32 shard_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StorageSerializeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.StorageSerializeResponse) */ {
 public:
  StorageSerializeResponse();
  virtual ~StorageSerializeResponse();

  StorageSerializeResponse(const StorageSerializeResponse& from);

  inline StorageSerializeResponse& operator=(const StorageSerializeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StorageSerializeResponse(StorageSerializeResponse&& from) noexcept
    : StorageSerializeResponse() {
    *this = ::std::move(from);
  }

  inline StorageSerializeResponse& operator=(StorageSerializeResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StorageSerializeResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StorageSerializeResponse* internal_default_instance() {
    return reinterpret_cast<const StorageSerializeResponse*>(
               &_StorageSerializeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(StorageSerializeResponse* other);
  friend void swap(StorageSerializeResponse& a, StorageSerializeResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StorageSerializeResponse* New() const final {
    return CreateMaybeMessage<StorageSerializeResponse>(NULL);
  }

  StorageSerializeResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StorageSerializeResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StorageSerializeResponse& from);
  void MergeFrom(const StorageSerializeResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StorageSerializeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string table = 2;
  void clear_table();
  static const int kTableFieldNumber = 2;
  const ::std::string& table() const;
  void set_table(const ::std::string& value);
  #if LANG_CXX11
  void set_table(::std::string&& value);
  #endif
  void set_table(const char* value);
  void set_table(const char* value, size_t size);
  ::std::string* mutable_table();
  ::std::string* release_table();
  void set_allocated_table(::std::string* table);

  // .protocol.StorageContext context = 4;
  bool has_context() const;
  void clear_context();
  static const int kContextFieldNumber = 4;
  private:
  const ::protocol::StorageContext& _internal_context() const;
  public:
  const ::protocol::StorageContext& context() const;
  ::protocol::StorageContext* release_context();
  ::protocol::StorageContext* mutable_context();
  void set_allocated_context(::protocol::StorageContext* context);

  // uint64 entityid = 3;
  void clear_entityid();
  static const int kEntityidFieldNumber = 3;
  ::google::protobuf::uint64 entityid() const;
  void set_entityid(::google::protobuf::uint64 value);

  // uint32 shard = 1;
  void clear_shard();
  static const int kShardFieldNumber = 1;
  ::google::protobuf::uint32 shard() const;
  void set_shard(::google::protobuf::uint32 value);

  // bool rc = 5;
  void clear_rc();
  static const int kRcFieldNumber = 5;
  bool rc() const;
  void set_rc(bool value);

  // @@protoc_insertion_point(class_scope:protocol.StorageSerializeResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr table_;
  ::protocol::StorageContext* context_;
  ::google::protobuf::uint64 entityid_;
  ::google::protobuf::uint32 shard_;
  bool rc_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StorageUnserializeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.StorageUnserializeRequest) */ {
 public:
  StorageUnserializeRequest();
  virtual ~StorageUnserializeRequest();

  StorageUnserializeRequest(const StorageUnserializeRequest& from);

  inline StorageUnserializeRequest& operator=(const StorageUnserializeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StorageUnserializeRequest(StorageUnserializeRequest&& from) noexcept
    : StorageUnserializeRequest() {
    *this = ::std::move(from);
  }

  inline StorageUnserializeRequest& operator=(StorageUnserializeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StorageUnserializeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StorageUnserializeRequest* internal_default_instance() {
    return reinterpret_cast<const StorageUnserializeRequest*>(
               &_StorageUnserializeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(StorageUnserializeRequest* other);
  friend void swap(StorageUnserializeRequest& a, StorageUnserializeRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StorageUnserializeRequest* New() const final {
    return CreateMaybeMessage<StorageUnserializeRequest>(NULL);
  }

  StorageUnserializeRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StorageUnserializeRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StorageUnserializeRequest& from);
  void MergeFrom(const StorageUnserializeRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StorageUnserializeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string table = 2;
  void clear_table();
  static const int kTableFieldNumber = 2;
  const ::std::string& table() const;
  void set_table(const ::std::string& value);
  #if LANG_CXX11
  void set_table(::std::string&& value);
  #endif
  void set_table(const char* value);
  void set_table(const char* value, size_t size);
  ::std::string* mutable_table();
  ::std::string* release_table();
  void set_allocated_table(::std::string* table);

  // .protocol.StorageContext context = 4;
  bool has_context() const;
  void clear_context();
  static const int kContextFieldNumber = 4;
  private:
  const ::protocol::StorageContext& _internal_context() const;
  public:
  const ::protocol::StorageContext& context() const;
  ::protocol::StorageContext* release_context();
  ::protocol::StorageContext* mutable_context();
  void set_allocated_context(::protocol::StorageContext* context);

  // uint64 entityid = 3;
  void clear_entityid();
  static const int kEntityidFieldNumber = 3;
  ::google::protobuf::uint64 entityid() const;
  void set_entityid(::google::protobuf::uint64 value);

  // uint32 shard = 1;
  void clear_shard();
  static const int kShardFieldNumber = 1;
  ::google::protobuf::uint32 shard() const;
  void set_shard(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.StorageUnserializeRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr table_;
  ::protocol::StorageContext* context_;
  ::google::protobuf::uint64 entityid_;
  ::google::protobuf::uint32 shard_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StorageUnserializeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.StorageUnserializeResponse) */ {
 public:
  StorageUnserializeResponse();
  virtual ~StorageUnserializeResponse();

  StorageUnserializeResponse(const StorageUnserializeResponse& from);

  inline StorageUnserializeResponse& operator=(const StorageUnserializeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StorageUnserializeResponse(StorageUnserializeResponse&& from) noexcept
    : StorageUnserializeResponse() {
    *this = ::std::move(from);
  }

  inline StorageUnserializeResponse& operator=(StorageUnserializeResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StorageUnserializeResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StorageUnserializeResponse* internal_default_instance() {
    return reinterpret_cast<const StorageUnserializeResponse*>(
               &_StorageUnserializeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(StorageUnserializeResponse* other);
  friend void swap(StorageUnserializeResponse& a, StorageUnserializeResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StorageUnserializeResponse* New() const final {
    return CreateMaybeMessage<StorageUnserializeResponse>(NULL);
  }

  StorageUnserializeResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StorageUnserializeResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StorageUnserializeResponse& from);
  void MergeFrom(const StorageUnserializeResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StorageUnserializeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string table = 2;
  void clear_table();
  static const int kTableFieldNumber = 2;
  const ::std::string& table() const;
  void set_table(const ::std::string& value);
  #if LANG_CXX11
  void set_table(::std::string&& value);
  #endif
  void set_table(const char* value);
  void set_table(const char* value, size_t size);
  ::std::string* mutable_table();
  ::std::string* release_table();
  void set_allocated_table(::std::string* table);

  // .protocol.Entity entity = 4;
  bool has_entity() const;
  void clear_entity();
  static const int kEntityFieldNumber = 4;
  private:
  const ::protocol::Entity& _internal_entity() const;
  public:
  const ::protocol::Entity& entity() const;
  ::protocol::Entity* release_entity();
  ::protocol::Entity* mutable_entity();
  void set_allocated_entity(::protocol::Entity* entity);

  // .protocol.StorageContext context = 5;
  bool has_context() const;
  void clear_context();
  static const int kContextFieldNumber = 5;
  private:
  const ::protocol::StorageContext& _internal_context() const;
  public:
  const ::protocol::StorageContext& context() const;
  ::protocol::StorageContext* release_context();
  ::protocol::StorageContext* mutable_context();
  void set_allocated_context(::protocol::StorageContext* context);

  // uint64 entityid = 3;
  void clear_entityid();
  static const int kEntityidFieldNumber = 3;
  ::google::protobuf::uint64 entityid() const;
  void set_entityid(::google::protobuf::uint64 value);

  // uint32 shard = 1;
  void clear_shard();
  static const int kShardFieldNumber = 1;
  ::google::protobuf::uint32 shard() const;
  void set_shard(::google::protobuf::uint32 value);

  // bool rc = 6;
  void clear_rc();
  static const int kRcFieldNumber = 6;
  bool rc() const;
  void set_rc(bool value);

  // @@protoc_insertion_point(class_scope:protocol.StorageUnserializeResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr table_;
  ::protocol::Entity* entity_;
  ::protocol::StorageContext* context_;
  ::google::protobuf::uint64 entityid_;
  ::google::protobuf::uint32 shard_;
  bool rc_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_server_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ServerRegisterRequest

// .protocol.SERVER_TYPE svrtype = 1;
inline void ServerRegisterRequest::clear_svrtype() {
  svrtype_ = 0;
}
inline ::protocol::SERVER_TYPE ServerRegisterRequest::svrtype() const {
  // @@protoc_insertion_point(field_get:protocol.ServerRegisterRequest.svrtype)
  return static_cast< ::protocol::SERVER_TYPE >(svrtype_);
}
inline void ServerRegisterRequest::set_svrtype(::protocol::SERVER_TYPE value) {
  
  svrtype_ = value;
  // @@protoc_insertion_point(field_set:protocol.ServerRegisterRequest.svrtype)
}

// int32 port = 2;
inline void ServerRegisterRequest::clear_port() {
  port_ = 0;
}
inline ::google::protobuf::int32 ServerRegisterRequest::port() const {
  // @@protoc_insertion_point(field_get:protocol.ServerRegisterRequest.port)
  return port_;
}
inline void ServerRegisterRequest::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:protocol.ServerRegisterRequest.port)
}

// int32 shardid = 3;
inline void ServerRegisterRequest::clear_shardid() {
  shardid_ = 0;
}
inline ::google::protobuf::int32 ServerRegisterRequest::shardid() const {
  // @@protoc_insertion_point(field_get:protocol.ServerRegisterRequest.shardid)
  return shardid_;
}
inline void ServerRegisterRequest::set_shardid(::google::protobuf::int32 value) {
  
  shardid_ = value;
  // @@protoc_insertion_point(field_set:protocol.ServerRegisterRequest.shardid)
}

// -------------------------------------------------------------------

// ServerRegisterResponse

// bool rc = 1;
inline void ServerRegisterResponse::clear_rc() {
  rc_ = false;
}
inline bool ServerRegisterResponse::rc() const {
  // @@protoc_insertion_point(field_get:protocol.ServerRegisterResponse.rc)
  return rc_;
}
inline void ServerRegisterResponse::set_rc(bool value) {
  
  rc_ = value;
  // @@protoc_insertion_point(field_set:protocol.ServerRegisterResponse.rc)
}

// .protocol.SERVER_TYPE svrtype = 2;
inline void ServerRegisterResponse::clear_svrtype() {
  svrtype_ = 0;
}
inline ::protocol::SERVER_TYPE ServerRegisterResponse::svrtype() const {
  // @@protoc_insertion_point(field_get:protocol.ServerRegisterResponse.svrtype)
  return static_cast< ::protocol::SERVER_TYPE >(svrtype_);
}
inline void ServerRegisterResponse::set_svrtype(::protocol::SERVER_TYPE value) {
  
  svrtype_ = value;
  // @@protoc_insertion_point(field_set:protocol.ServerRegisterResponse.svrtype)
}

// -------------------------------------------------------------------

// ServerRetrieveRequest

// .protocol.SERVER_TYPE svrtype = 1;
inline void ServerRetrieveRequest::clear_svrtype() {
  svrtype_ = 0;
}
inline ::protocol::SERVER_TYPE ServerRetrieveRequest::svrtype() const {
  // @@protoc_insertion_point(field_get:protocol.ServerRetrieveRequest.svrtype)
  return static_cast< ::protocol::SERVER_TYPE >(svrtype_);
}
inline void ServerRetrieveRequest::set_svrtype(::protocol::SERVER_TYPE value) {
  
  svrtype_ = value;
  // @@protoc_insertion_point(field_set:protocol.ServerRetrieveRequest.svrtype)
}

// -------------------------------------------------------------------

// ServerRetrieveResponse

// .protocol.SERVER_TYPE svrtype = 1;
inline void ServerRetrieveResponse::clear_svrtype() {
  svrtype_ = 0;
}
inline ::protocol::SERVER_TYPE ServerRetrieveResponse::svrtype() const {
  // @@protoc_insertion_point(field_get:protocol.ServerRetrieveResponse.svrtype)
  return static_cast< ::protocol::SERVER_TYPE >(svrtype_);
}
inline void ServerRetrieveResponse::set_svrtype(::protocol::SERVER_TYPE value) {
  
  svrtype_ = value;
  // @@protoc_insertion_point(field_set:protocol.ServerRetrieveResponse.svrtype)
}

// repeated uint64 servers = 2;
inline int ServerRetrieveResponse::servers_size() const {
  return servers_.size();
}
inline void ServerRetrieveResponse::clear_servers() {
  servers_.Clear();
}
inline ::google::protobuf::uint64 ServerRetrieveResponse::servers(int index) const {
  // @@protoc_insertion_point(field_get:protocol.ServerRetrieveResponse.servers)
  return servers_.Get(index);
}
inline void ServerRetrieveResponse::set_servers(int index, ::google::protobuf::uint64 value) {
  servers_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.ServerRetrieveResponse.servers)
}
inline void ServerRetrieveResponse::add_servers(::google::protobuf::uint64 value) {
  servers_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.ServerRetrieveResponse.servers)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ServerRetrieveResponse::servers() const {
  // @@protoc_insertion_point(field_list:protocol.ServerRetrieveResponse.servers)
  return servers_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ServerRetrieveResponse::mutable_servers() {
  // @@protoc_insertion_point(field_mutable_list:protocol.ServerRetrieveResponse.servers)
  return &servers_;
}

// -------------------------------------------------------------------

// StorageContext

// uint32 client = 1;
inline void StorageContext::clear_client() {
  client_ = 0u;
}
inline ::google::protobuf::uint32 StorageContext::client() const {
  // @@protoc_insertion_point(field_get:protocol.StorageContext.client)
  return client_;
}
inline void StorageContext::set_client(::google::protobuf::uint32 value) {
  
  client_ = value;
  // @@protoc_insertion_point(field_set:protocol.StorageContext.client)
}

// uint32 gatewayserver = 2;
inline void StorageContext::clear_gatewayserver() {
  gatewayserver_ = 0u;
}
inline ::google::protobuf::uint32 StorageContext::gatewayserver() const {
  // @@protoc_insertion_point(field_get:protocol.StorageContext.gatewayserver)
  return gatewayserver_;
}
inline void StorageContext::set_gatewayserver(::google::protobuf::uint32 value) {
  
  gatewayserver_ = value;
  // @@protoc_insertion_point(field_set:protocol.StorageContext.gatewayserver)
}

// uint32 sceneserver = 3;
inline void StorageContext::clear_sceneserver() {
  sceneserver_ = 0u;
}
inline ::google::protobuf::uint32 StorageContext::sceneserver() const {
  // @@protoc_insertion_point(field_get:protocol.StorageContext.sceneserver)
  return sceneserver_;
}
inline void StorageContext::set_sceneserver(::google::protobuf::uint32 value) {
  
  sceneserver_ = value;
  // @@protoc_insertion_point(field_set:protocol.StorageContext.sceneserver)
}

// uint32 flags = 4;
inline void StorageContext::clear_flags() {
  flags_ = 0u;
}
inline ::google::protobuf::uint32 StorageContext::flags() const {
  // @@protoc_insertion_point(field_get:protocol.StorageContext.flags)
  return flags_;
}
inline void StorageContext::set_flags(::google::protobuf::uint32 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:protocol.StorageContext.flags)
}

// -------------------------------------------------------------------

// StorageSerializeRequest

// uint32 shard = 1;
inline void StorageSerializeRequest::clear_shard() {
  shard_ = 0u;
}
inline ::google::protobuf::uint32 StorageSerializeRequest::shard() const {
  // @@protoc_insertion_point(field_get:protocol.StorageSerializeRequest.shard)
  return shard_;
}
inline void StorageSerializeRequest::set_shard(::google::protobuf::uint32 value) {
  
  shard_ = value;
  // @@protoc_insertion_point(field_set:protocol.StorageSerializeRequest.shard)
}

// string table = 2;
inline void StorageSerializeRequest::clear_table() {
  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StorageSerializeRequest::table() const {
  // @@protoc_insertion_point(field_get:protocol.StorageSerializeRequest.table)
  return table_.GetNoArena();
}
inline void StorageSerializeRequest::set_table(const ::std::string& value) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.StorageSerializeRequest.table)
}
#if LANG_CXX11
inline void StorageSerializeRequest::set_table(::std::string&& value) {
  
  table_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.StorageSerializeRequest.table)
}
#endif
inline void StorageSerializeRequest::set_table(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.StorageSerializeRequest.table)
}
inline void StorageSerializeRequest::set_table(const char* value, size_t size) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.StorageSerializeRequest.table)
}
inline ::std::string* StorageSerializeRequest::mutable_table() {
  
  // @@protoc_insertion_point(field_mutable:protocol.StorageSerializeRequest.table)
  return table_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StorageSerializeRequest::release_table() {
  // @@protoc_insertion_point(field_release:protocol.StorageSerializeRequest.table)
  
  return table_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StorageSerializeRequest::set_allocated_table(::std::string* table) {
  if (table != NULL) {
    
  } else {
    
  }
  table_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), table);
  // @@protoc_insertion_point(field_set_allocated:protocol.StorageSerializeRequest.table)
}

// .protocol.Entity entity = 3;
inline bool StorageSerializeRequest::has_entity() const {
  return this != internal_default_instance() && entity_ != NULL;
}
inline const ::protocol::Entity& StorageSerializeRequest::_internal_entity() const {
  return *entity_;
}
inline const ::protocol::Entity& StorageSerializeRequest::entity() const {
  const ::protocol::Entity* p = entity_;
  // @@protoc_insertion_point(field_get:protocol.StorageSerializeRequest.entity)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::Entity*>(
      &::protocol::_Entity_default_instance_);
}
inline ::protocol::Entity* StorageSerializeRequest::release_entity() {
  // @@protoc_insertion_point(field_release:protocol.StorageSerializeRequest.entity)
  
  ::protocol::Entity* temp = entity_;
  entity_ = NULL;
  return temp;
}
inline ::protocol::Entity* StorageSerializeRequest::mutable_entity() {
  
  if (entity_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::Entity>(GetArenaNoVirtual());
    entity_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.StorageSerializeRequest.entity)
  return entity_;
}
inline void StorageSerializeRequest::set_allocated_entity(::protocol::Entity* entity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(entity_);
  }
  if (entity) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      entity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, entity, submessage_arena);
    }
    
  } else {
    
  }
  entity_ = entity;
  // @@protoc_insertion_point(field_set_allocated:protocol.StorageSerializeRequest.entity)
}

// .protocol.StorageContext context = 4;
inline bool StorageSerializeRequest::has_context() const {
  return this != internal_default_instance() && context_ != NULL;
}
inline void StorageSerializeRequest::clear_context() {
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
}
inline const ::protocol::StorageContext& StorageSerializeRequest::_internal_context() const {
  return *context_;
}
inline const ::protocol::StorageContext& StorageSerializeRequest::context() const {
  const ::protocol::StorageContext* p = context_;
  // @@protoc_insertion_point(field_get:protocol.StorageSerializeRequest.context)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::StorageContext*>(
      &::protocol::_StorageContext_default_instance_);
}
inline ::protocol::StorageContext* StorageSerializeRequest::release_context() {
  // @@protoc_insertion_point(field_release:protocol.StorageSerializeRequest.context)
  
  ::protocol::StorageContext* temp = context_;
  context_ = NULL;
  return temp;
}
inline ::protocol::StorageContext* StorageSerializeRequest::mutable_context() {
  
  if (context_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::StorageContext>(GetArenaNoVirtual());
    context_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.StorageSerializeRequest.context)
  return context_;
}
inline void StorageSerializeRequest::set_allocated_context(::protocol::StorageContext* context) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete context_;
  }
  if (context) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      context = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, context, submessage_arena);
    }
    
  } else {
    
  }
  context_ = context;
  // @@protoc_insertion_point(field_set_allocated:protocol.StorageSerializeRequest.context)
}

// -------------------------------------------------------------------

// StorageSerializeResponse

// uint32 shard = 1;
inline void StorageSerializeResponse::clear_shard() {
  shard_ = 0u;
}
inline ::google::protobuf::uint32 StorageSerializeResponse::shard() const {
  // @@protoc_insertion_point(field_get:protocol.StorageSerializeResponse.shard)
  return shard_;
}
inline void StorageSerializeResponse::set_shard(::google::protobuf::uint32 value) {
  
  shard_ = value;
  // @@protoc_insertion_point(field_set:protocol.StorageSerializeResponse.shard)
}

// string table = 2;
inline void StorageSerializeResponse::clear_table() {
  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StorageSerializeResponse::table() const {
  // @@protoc_insertion_point(field_get:protocol.StorageSerializeResponse.table)
  return table_.GetNoArena();
}
inline void StorageSerializeResponse::set_table(const ::std::string& value) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.StorageSerializeResponse.table)
}
#if LANG_CXX11
inline void StorageSerializeResponse::set_table(::std::string&& value) {
  
  table_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.StorageSerializeResponse.table)
}
#endif
inline void StorageSerializeResponse::set_table(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.StorageSerializeResponse.table)
}
inline void StorageSerializeResponse::set_table(const char* value, size_t size) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.StorageSerializeResponse.table)
}
inline ::std::string* StorageSerializeResponse::mutable_table() {
  
  // @@protoc_insertion_point(field_mutable:protocol.StorageSerializeResponse.table)
  return table_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StorageSerializeResponse::release_table() {
  // @@protoc_insertion_point(field_release:protocol.StorageSerializeResponse.table)
  
  return table_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StorageSerializeResponse::set_allocated_table(::std::string* table) {
  if (table != NULL) {
    
  } else {
    
  }
  table_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), table);
  // @@protoc_insertion_point(field_set_allocated:protocol.StorageSerializeResponse.table)
}

// uint64 entityid = 3;
inline void StorageSerializeResponse::clear_entityid() {
  entityid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 StorageSerializeResponse::entityid() const {
  // @@protoc_insertion_point(field_get:protocol.StorageSerializeResponse.entityid)
  return entityid_;
}
inline void StorageSerializeResponse::set_entityid(::google::protobuf::uint64 value) {
  
  entityid_ = value;
  // @@protoc_insertion_point(field_set:protocol.StorageSerializeResponse.entityid)
}

// .protocol.StorageContext context = 4;
inline bool StorageSerializeResponse::has_context() const {
  return this != internal_default_instance() && context_ != NULL;
}
inline void StorageSerializeResponse::clear_context() {
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
}
inline const ::protocol::StorageContext& StorageSerializeResponse::_internal_context() const {
  return *context_;
}
inline const ::protocol::StorageContext& StorageSerializeResponse::context() const {
  const ::protocol::StorageContext* p = context_;
  // @@protoc_insertion_point(field_get:protocol.StorageSerializeResponse.context)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::StorageContext*>(
      &::protocol::_StorageContext_default_instance_);
}
inline ::protocol::StorageContext* StorageSerializeResponse::release_context() {
  // @@protoc_insertion_point(field_release:protocol.StorageSerializeResponse.context)
  
  ::protocol::StorageContext* temp = context_;
  context_ = NULL;
  return temp;
}
inline ::protocol::StorageContext* StorageSerializeResponse::mutable_context() {
  
  if (context_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::StorageContext>(GetArenaNoVirtual());
    context_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.StorageSerializeResponse.context)
  return context_;
}
inline void StorageSerializeResponse::set_allocated_context(::protocol::StorageContext* context) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete context_;
  }
  if (context) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      context = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, context, submessage_arena);
    }
    
  } else {
    
  }
  context_ = context;
  // @@protoc_insertion_point(field_set_allocated:protocol.StorageSerializeResponse.context)
}

// bool rc = 5;
inline void StorageSerializeResponse::clear_rc() {
  rc_ = false;
}
inline bool StorageSerializeResponse::rc() const {
  // @@protoc_insertion_point(field_get:protocol.StorageSerializeResponse.rc)
  return rc_;
}
inline void StorageSerializeResponse::set_rc(bool value) {
  
  rc_ = value;
  // @@protoc_insertion_point(field_set:protocol.StorageSerializeResponse.rc)
}

// -------------------------------------------------------------------

// StorageUnserializeRequest

// uint32 shard = 1;
inline void StorageUnserializeRequest::clear_shard() {
  shard_ = 0u;
}
inline ::google::protobuf::uint32 StorageUnserializeRequest::shard() const {
  // @@protoc_insertion_point(field_get:protocol.StorageUnserializeRequest.shard)
  return shard_;
}
inline void StorageUnserializeRequest::set_shard(::google::protobuf::uint32 value) {
  
  shard_ = value;
  // @@protoc_insertion_point(field_set:protocol.StorageUnserializeRequest.shard)
}

// string table = 2;
inline void StorageUnserializeRequest::clear_table() {
  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StorageUnserializeRequest::table() const {
  // @@protoc_insertion_point(field_get:protocol.StorageUnserializeRequest.table)
  return table_.GetNoArena();
}
inline void StorageUnserializeRequest::set_table(const ::std::string& value) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.StorageUnserializeRequest.table)
}
#if LANG_CXX11
inline void StorageUnserializeRequest::set_table(::std::string&& value) {
  
  table_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.StorageUnserializeRequest.table)
}
#endif
inline void StorageUnserializeRequest::set_table(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.StorageUnserializeRequest.table)
}
inline void StorageUnserializeRequest::set_table(const char* value, size_t size) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.StorageUnserializeRequest.table)
}
inline ::std::string* StorageUnserializeRequest::mutable_table() {
  
  // @@protoc_insertion_point(field_mutable:protocol.StorageUnserializeRequest.table)
  return table_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StorageUnserializeRequest::release_table() {
  // @@protoc_insertion_point(field_release:protocol.StorageUnserializeRequest.table)
  
  return table_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StorageUnserializeRequest::set_allocated_table(::std::string* table) {
  if (table != NULL) {
    
  } else {
    
  }
  table_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), table);
  // @@protoc_insertion_point(field_set_allocated:protocol.StorageUnserializeRequest.table)
}

// uint64 entityid = 3;
inline void StorageUnserializeRequest::clear_entityid() {
  entityid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 StorageUnserializeRequest::entityid() const {
  // @@protoc_insertion_point(field_get:protocol.StorageUnserializeRequest.entityid)
  return entityid_;
}
inline void StorageUnserializeRequest::set_entityid(::google::protobuf::uint64 value) {
  
  entityid_ = value;
  // @@protoc_insertion_point(field_set:protocol.StorageUnserializeRequest.entityid)
}

// .protocol.StorageContext context = 4;
inline bool StorageUnserializeRequest::has_context() const {
  return this != internal_default_instance() && context_ != NULL;
}
inline void StorageUnserializeRequest::clear_context() {
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
}
inline const ::protocol::StorageContext& StorageUnserializeRequest::_internal_context() const {
  return *context_;
}
inline const ::protocol::StorageContext& StorageUnserializeRequest::context() const {
  const ::protocol::StorageContext* p = context_;
  // @@protoc_insertion_point(field_get:protocol.StorageUnserializeRequest.context)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::StorageContext*>(
      &::protocol::_StorageContext_default_instance_);
}
inline ::protocol::StorageContext* StorageUnserializeRequest::release_context() {
  // @@protoc_insertion_point(field_release:protocol.StorageUnserializeRequest.context)
  
  ::protocol::StorageContext* temp = context_;
  context_ = NULL;
  return temp;
}
inline ::protocol::StorageContext* StorageUnserializeRequest::mutable_context() {
  
  if (context_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::StorageContext>(GetArenaNoVirtual());
    context_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.StorageUnserializeRequest.context)
  return context_;
}
inline void StorageUnserializeRequest::set_allocated_context(::protocol::StorageContext* context) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete context_;
  }
  if (context) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      context = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, context, submessage_arena);
    }
    
  } else {
    
  }
  context_ = context;
  // @@protoc_insertion_point(field_set_allocated:protocol.StorageUnserializeRequest.context)
}

// -------------------------------------------------------------------

// StorageUnserializeResponse

// uint32 shard = 1;
inline void StorageUnserializeResponse::clear_shard() {
  shard_ = 0u;
}
inline ::google::protobuf::uint32 StorageUnserializeResponse::shard() const {
  // @@protoc_insertion_point(field_get:protocol.StorageUnserializeResponse.shard)
  return shard_;
}
inline void StorageUnserializeResponse::set_shard(::google::protobuf::uint32 value) {
  
  shard_ = value;
  // @@protoc_insertion_point(field_set:protocol.StorageUnserializeResponse.shard)
}

// string table = 2;
inline void StorageUnserializeResponse::clear_table() {
  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StorageUnserializeResponse::table() const {
  // @@protoc_insertion_point(field_get:protocol.StorageUnserializeResponse.table)
  return table_.GetNoArena();
}
inline void StorageUnserializeResponse::set_table(const ::std::string& value) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.StorageUnserializeResponse.table)
}
#if LANG_CXX11
inline void StorageUnserializeResponse::set_table(::std::string&& value) {
  
  table_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.StorageUnserializeResponse.table)
}
#endif
inline void StorageUnserializeResponse::set_table(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.StorageUnserializeResponse.table)
}
inline void StorageUnserializeResponse::set_table(const char* value, size_t size) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.StorageUnserializeResponse.table)
}
inline ::std::string* StorageUnserializeResponse::mutable_table() {
  
  // @@protoc_insertion_point(field_mutable:protocol.StorageUnserializeResponse.table)
  return table_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StorageUnserializeResponse::release_table() {
  // @@protoc_insertion_point(field_release:protocol.StorageUnserializeResponse.table)
  
  return table_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StorageUnserializeResponse::set_allocated_table(::std::string* table) {
  if (table != NULL) {
    
  } else {
    
  }
  table_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), table);
  // @@protoc_insertion_point(field_set_allocated:protocol.StorageUnserializeResponse.table)
}

// uint64 entityid = 3;
inline void StorageUnserializeResponse::clear_entityid() {
  entityid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 StorageUnserializeResponse::entityid() const {
  // @@protoc_insertion_point(field_get:protocol.StorageUnserializeResponse.entityid)
  return entityid_;
}
inline void StorageUnserializeResponse::set_entityid(::google::protobuf::uint64 value) {
  
  entityid_ = value;
  // @@protoc_insertion_point(field_set:protocol.StorageUnserializeResponse.entityid)
}

// .protocol.Entity entity = 4;
inline bool StorageUnserializeResponse::has_entity() const {
  return this != internal_default_instance() && entity_ != NULL;
}
inline const ::protocol::Entity& StorageUnserializeResponse::_internal_entity() const {
  return *entity_;
}
inline const ::protocol::Entity& StorageUnserializeResponse::entity() const {
  const ::protocol::Entity* p = entity_;
  // @@protoc_insertion_point(field_get:protocol.StorageUnserializeResponse.entity)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::Entity*>(
      &::protocol::_Entity_default_instance_);
}
inline ::protocol::Entity* StorageUnserializeResponse::release_entity() {
  // @@protoc_insertion_point(field_release:protocol.StorageUnserializeResponse.entity)
  
  ::protocol::Entity* temp = entity_;
  entity_ = NULL;
  return temp;
}
inline ::protocol::Entity* StorageUnserializeResponse::mutable_entity() {
  
  if (entity_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::Entity>(GetArenaNoVirtual());
    entity_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.StorageUnserializeResponse.entity)
  return entity_;
}
inline void StorageUnserializeResponse::set_allocated_entity(::protocol::Entity* entity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(entity_);
  }
  if (entity) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      entity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, entity, submessage_arena);
    }
    
  } else {
    
  }
  entity_ = entity;
  // @@protoc_insertion_point(field_set_allocated:protocol.StorageUnserializeResponse.entity)
}

// .protocol.StorageContext context = 5;
inline bool StorageUnserializeResponse::has_context() const {
  return this != internal_default_instance() && context_ != NULL;
}
inline void StorageUnserializeResponse::clear_context() {
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
}
inline const ::protocol::StorageContext& StorageUnserializeResponse::_internal_context() const {
  return *context_;
}
inline const ::protocol::StorageContext& StorageUnserializeResponse::context() const {
  const ::protocol::StorageContext* p = context_;
  // @@protoc_insertion_point(field_get:protocol.StorageUnserializeResponse.context)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::StorageContext*>(
      &::protocol::_StorageContext_default_instance_);
}
inline ::protocol::StorageContext* StorageUnserializeResponse::release_context() {
  // @@protoc_insertion_point(field_release:protocol.StorageUnserializeResponse.context)
  
  ::protocol::StorageContext* temp = context_;
  context_ = NULL;
  return temp;
}
inline ::protocol::StorageContext* StorageUnserializeResponse::mutable_context() {
  
  if (context_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::StorageContext>(GetArenaNoVirtual());
    context_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.StorageUnserializeResponse.context)
  return context_;
}
inline void StorageUnserializeResponse::set_allocated_context(::protocol::StorageContext* context) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete context_;
  }
  if (context) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      context = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, context, submessage_arena);
    }
    
  } else {
    
  }
  context_ = context;
  // @@protoc_insertion_point(field_set_allocated:protocol.StorageUnserializeResponse.context)
}

// bool rc = 6;
inline void StorageUnserializeResponse::clear_rc() {
  rc_ = false;
}
inline bool StorageUnserializeResponse::rc() const {
  // @@protoc_insertion_point(field_get:protocol.StorageUnserializeResponse.rc)
  return rc_;
}
inline void StorageUnserializeResponse::set_rc(bool value) {
  
  rc_ = value;
  // @@protoc_insertion_point(field_set:protocol.StorageUnserializeResponse.rc)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::protocol::SMSGID> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocol::SMSGID>() {
  return ::protocol::SMSGID_descriptor();
}
template <> struct is_proto_enum< ::protocol::SERVER_TYPE> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocol::SERVER_TYPE>() {
  return ::protocol::SERVER_TYPE_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_server_2eproto
