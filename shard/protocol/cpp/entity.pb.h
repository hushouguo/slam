// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: entity.proto

#ifndef PROTOBUF_INCLUDED_entity_2eproto
#define PROTOBUF_INCLUDED_entity_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_entity_2eproto 

namespace protobuf_entity_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_entity_2eproto
namespace protocol {
class Entity;
class EntityDefaultTypeInternal;
extern EntityDefaultTypeInternal _Entity_default_instance_;
class Friend;
class FriendDefaultTypeInternal;
extern FriendDefaultTypeInternal _Friend_default_instance_;
}  // namespace protocol
namespace google {
namespace protobuf {
template<> ::protocol::Entity* Arena::CreateMaybeMessage<::protocol::Entity>(Arena*);
template<> ::protocol::Friend* Arena::CreateMaybeMessage<::protocol::Friend>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace protocol {

// ===================================================================

class Friend : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.Friend) */ {
 public:
  Friend();
  virtual ~Friend();

  Friend(const Friend& from);

  inline Friend& operator=(const Friend& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Friend(Friend&& from) noexcept
    : Friend() {
    *this = ::std::move(from);
  }

  inline Friend& operator=(Friend&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Friend& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Friend* internal_default_instance() {
    return reinterpret_cast<const Friend*>(
               &_Friend_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Friend* other);
  friend void swap(Friend& a, Friend& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Friend* New() const final {
    return CreateMaybeMessage<Friend>(NULL);
  }

  Friend* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Friend>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Friend& from);
  void MergeFrom(const Friend& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Friend* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.Friend)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_entity_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Entity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.Entity) */ {
 public:
  Entity();
  virtual ~Entity();

  Entity(const Entity& from);

  inline Entity& operator=(const Entity& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Entity(Entity&& from) noexcept
    : Entity() {
    *this = ::std::move(from);
  }

  inline Entity& operator=(Entity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Entity& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Entity* internal_default_instance() {
    return reinterpret_cast<const Entity*>(
               &_Entity_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Entity* other);
  friend void swap(Entity& a, Entity& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Entity* New() const final {
    return CreateMaybeMessage<Entity>(NULL);
  }

  Entity* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Entity>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Entity& from);
  void MergeFrom(const Entity& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Entity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes bag = 5;
  void clear_bag();
  static const int kBagFieldNumber = 5;
  const ::std::string& bag() const;
  void set_bag(const ::std::string& value);
  #if LANG_CXX11
  void set_bag(::std::string&& value);
  #endif
  void set_bag(const char* value);
  void set_bag(const void* value, size_t size);
  ::std::string* mutable_bag();
  ::std::string* release_bag();
  void set_allocated_bag(::std::string* bag);

  // bytes mailbox = 6;
  void clear_mailbox();
  static const int kMailboxFieldNumber = 6;
  const ::std::string& mailbox() const;
  void set_mailbox(const ::std::string& value);
  #if LANG_CXX11
  void set_mailbox(::std::string&& value);
  #endif
  void set_mailbox(const char* value);
  void set_mailbox(const void* value, size_t size);
  ::std::string* mutable_mailbox();
  ::std::string* release_mailbox();
  void set_allocated_mailbox(::std::string* mailbox);

  // .protocol.Friend friendlist = 7;
  bool has_friendlist() const;
  void clear_friendlist();
  static const int kFriendlistFieldNumber = 7;
  private:
  const ::protocol::Friend& _internal_friendlist() const;
  public:
  const ::protocol::Friend& friendlist() const;
  ::protocol::Friend* release_friendlist();
  ::protocol::Friend* mutable_friendlist();
  void set_allocated_friendlist(::protocol::Friend* friendlist);

  // uint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // uint64 gold = 2;
  void clear_gold();
  static const int kGoldFieldNumber = 2;
  ::google::protobuf::uint64 gold() const;
  void set_gold(::google::protobuf::uint64 value);

  // uint64 diamond = 3;
  void clear_diamond();
  static const int kDiamondFieldNumber = 3;
  ::google::protobuf::uint64 diamond() const;
  void set_diamond(::google::protobuf::uint64 value);

  // uint32 level = 4;
  void clear_level();
  static const int kLevelFieldNumber = 4;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.Entity)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr bag_;
  ::google::protobuf::internal::ArenaStringPtr mailbox_;
  ::protocol::Friend* friendlist_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 gold_;
  ::google::protobuf::uint64 diamond_;
  ::google::protobuf::uint32 level_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_entity_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Friend

// uint32 id = 1;
inline void Friend::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 Friend::id() const {
  // @@protoc_insertion_point(field_get:protocol.Friend.id)
  return id_;
}
inline void Friend::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.Friend.id)
}

// -------------------------------------------------------------------

// Entity

// uint64 id = 1;
inline void Entity::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Entity::id() const {
  // @@protoc_insertion_point(field_get:protocol.Entity.id)
  return id_;
}
inline void Entity::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.Entity.id)
}

// uint64 gold = 2;
inline void Entity::clear_gold() {
  gold_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Entity::gold() const {
  // @@protoc_insertion_point(field_get:protocol.Entity.gold)
  return gold_;
}
inline void Entity::set_gold(::google::protobuf::uint64 value) {
  
  gold_ = value;
  // @@protoc_insertion_point(field_set:protocol.Entity.gold)
}

// uint64 diamond = 3;
inline void Entity::clear_diamond() {
  diamond_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Entity::diamond() const {
  // @@protoc_insertion_point(field_get:protocol.Entity.diamond)
  return diamond_;
}
inline void Entity::set_diamond(::google::protobuf::uint64 value) {
  
  diamond_ = value;
  // @@protoc_insertion_point(field_set:protocol.Entity.diamond)
}

// uint32 level = 4;
inline void Entity::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 Entity::level() const {
  // @@protoc_insertion_point(field_get:protocol.Entity.level)
  return level_;
}
inline void Entity::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:protocol.Entity.level)
}

// bytes bag = 5;
inline void Entity::clear_bag() {
  bag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Entity::bag() const {
  // @@protoc_insertion_point(field_get:protocol.Entity.bag)
  return bag_.GetNoArena();
}
inline void Entity::set_bag(const ::std::string& value) {
  
  bag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.Entity.bag)
}
#if LANG_CXX11
inline void Entity::set_bag(::std::string&& value) {
  
  bag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.Entity.bag)
}
#endif
inline void Entity::set_bag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.Entity.bag)
}
inline void Entity::set_bag(const void* value, size_t size) {
  
  bag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.Entity.bag)
}
inline ::std::string* Entity::mutable_bag() {
  
  // @@protoc_insertion_point(field_mutable:protocol.Entity.bag)
  return bag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Entity::release_bag() {
  // @@protoc_insertion_point(field_release:protocol.Entity.bag)
  
  return bag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Entity::set_allocated_bag(::std::string* bag) {
  if (bag != NULL) {
    
  } else {
    
  }
  bag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bag);
  // @@protoc_insertion_point(field_set_allocated:protocol.Entity.bag)
}

// bytes mailbox = 6;
inline void Entity::clear_mailbox() {
  mailbox_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Entity::mailbox() const {
  // @@protoc_insertion_point(field_get:protocol.Entity.mailbox)
  return mailbox_.GetNoArena();
}
inline void Entity::set_mailbox(const ::std::string& value) {
  
  mailbox_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.Entity.mailbox)
}
#if LANG_CXX11
inline void Entity::set_mailbox(::std::string&& value) {
  
  mailbox_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.Entity.mailbox)
}
#endif
inline void Entity::set_mailbox(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mailbox_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.Entity.mailbox)
}
inline void Entity::set_mailbox(const void* value, size_t size) {
  
  mailbox_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.Entity.mailbox)
}
inline ::std::string* Entity::mutable_mailbox() {
  
  // @@protoc_insertion_point(field_mutable:protocol.Entity.mailbox)
  return mailbox_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Entity::release_mailbox() {
  // @@protoc_insertion_point(field_release:protocol.Entity.mailbox)
  
  return mailbox_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Entity::set_allocated_mailbox(::std::string* mailbox) {
  if (mailbox != NULL) {
    
  } else {
    
  }
  mailbox_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mailbox);
  // @@protoc_insertion_point(field_set_allocated:protocol.Entity.mailbox)
}

// .protocol.Friend friendlist = 7;
inline bool Entity::has_friendlist() const {
  return this != internal_default_instance() && friendlist_ != NULL;
}
inline void Entity::clear_friendlist() {
  if (GetArenaNoVirtual() == NULL && friendlist_ != NULL) {
    delete friendlist_;
  }
  friendlist_ = NULL;
}
inline const ::protocol::Friend& Entity::_internal_friendlist() const {
  return *friendlist_;
}
inline const ::protocol::Friend& Entity::friendlist() const {
  const ::protocol::Friend* p = friendlist_;
  // @@protoc_insertion_point(field_get:protocol.Entity.friendlist)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::Friend*>(
      &::protocol::_Friend_default_instance_);
}
inline ::protocol::Friend* Entity::release_friendlist() {
  // @@protoc_insertion_point(field_release:protocol.Entity.friendlist)
  
  ::protocol::Friend* temp = friendlist_;
  friendlist_ = NULL;
  return temp;
}
inline ::protocol::Friend* Entity::mutable_friendlist() {
  
  if (friendlist_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::Friend>(GetArenaNoVirtual());
    friendlist_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.Entity.friendlist)
  return friendlist_;
}
inline void Entity::set_allocated_friendlist(::protocol::Friend* friendlist) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete friendlist_;
  }
  if (friendlist) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      friendlist = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, friendlist, submessage_arena);
    }
    
  } else {
    
  }
  friendlist_ = friendlist;
  // @@protoc_insertion_point(field_set_allocated:protocol.Entity.friendlist)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_entity_2eproto
