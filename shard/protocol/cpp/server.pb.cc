// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server.proto

#include "server.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_entity_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_entity_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Entity;
}  // namespace protobuf_entity_2eproto
namespace protobuf_server_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_server_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StorageContext;
}  // namespace protobuf_server_2eproto
namespace protocol {
class ServerRegisterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerRegisterRequest>
      _instance;
} _ServerRegisterRequest_default_instance_;
class ServerRegisterResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerRegisterResponse>
      _instance;
} _ServerRegisterResponse_default_instance_;
class ServerRetrieveRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerRetrieveRequest>
      _instance;
} _ServerRetrieveRequest_default_instance_;
class ServerRetrieveResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerRetrieveResponse>
      _instance;
} _ServerRetrieveResponse_default_instance_;
class StorageContextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StorageContext>
      _instance;
} _StorageContext_default_instance_;
class StorageSerializeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StorageSerializeRequest>
      _instance;
} _StorageSerializeRequest_default_instance_;
class StorageSerializeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StorageSerializeResponse>
      _instance;
} _StorageSerializeResponse_default_instance_;
class StorageUnserializeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StorageUnserializeRequest>
      _instance;
} _StorageUnserializeRequest_default_instance_;
class StorageUnserializeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StorageUnserializeResponse>
      _instance;
} _StorageUnserializeResponse_default_instance_;
}  // namespace protocol
namespace protobuf_server_2eproto {
static void InitDefaultsServerRegisterRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::_ServerRegisterRequest_default_instance_;
    new (ptr) ::protocol::ServerRegisterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::ServerRegisterRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ServerRegisterRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsServerRegisterRequest}, {}};

static void InitDefaultsServerRegisterResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::_ServerRegisterResponse_default_instance_;
    new (ptr) ::protocol::ServerRegisterResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::ServerRegisterResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ServerRegisterResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsServerRegisterResponse}, {}};

static void InitDefaultsServerRetrieveRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::_ServerRetrieveRequest_default_instance_;
    new (ptr) ::protocol::ServerRetrieveRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::ServerRetrieveRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ServerRetrieveRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsServerRetrieveRequest}, {}};

static void InitDefaultsServerRetrieveResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::_ServerRetrieveResponse_default_instance_;
    new (ptr) ::protocol::ServerRetrieveResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::ServerRetrieveResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ServerRetrieveResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsServerRetrieveResponse}, {}};

static void InitDefaultsStorageContext() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::_StorageContext_default_instance_;
    new (ptr) ::protocol::StorageContext();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::StorageContext::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StorageContext =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStorageContext}, {}};

static void InitDefaultsStorageSerializeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::_StorageSerializeRequest_default_instance_;
    new (ptr) ::protocol::StorageSerializeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::StorageSerializeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_StorageSerializeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsStorageSerializeRequest}, {
      &protobuf_entity_2eproto::scc_info_Entity.base,
      &protobuf_server_2eproto::scc_info_StorageContext.base,}};

static void InitDefaultsStorageSerializeResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::_StorageSerializeResponse_default_instance_;
    new (ptr) ::protocol::StorageSerializeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::StorageSerializeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StorageSerializeResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStorageSerializeResponse}, {
      &protobuf_server_2eproto::scc_info_StorageContext.base,}};

static void InitDefaultsStorageUnserializeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::_StorageUnserializeRequest_default_instance_;
    new (ptr) ::protocol::StorageUnserializeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::StorageUnserializeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StorageUnserializeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStorageUnserializeRequest}, {
      &protobuf_server_2eproto::scc_info_StorageContext.base,}};

static void InitDefaultsStorageUnserializeResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::_StorageUnserializeResponse_default_instance_;
    new (ptr) ::protocol::StorageUnserializeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::StorageUnserializeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_StorageUnserializeResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsStorageUnserializeResponse}, {
      &protobuf_entity_2eproto::scc_info_Entity.base,
      &protobuf_server_2eproto::scc_info_StorageContext.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ServerRegisterRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerRegisterResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerRetrieveRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerRetrieveResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StorageContext.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StorageSerializeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StorageSerializeResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StorageUnserializeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StorageUnserializeResponse.base);
}

::google::protobuf::Metadata file_level_metadata[9];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ServerRegisterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ServerRegisterRequest, svrtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ServerRegisterRequest, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ServerRegisterRequest, shard_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ServerRegisterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ServerRegisterResponse, rc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ServerRegisterResponse, svrtype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ServerRetrieveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ServerRetrieveRequest, svrtype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ServerRetrieveResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ServerRetrieveResponse, svrtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::ServerRetrieveResponse, servers_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::StorageContext, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::StorageContext, client_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::StorageContext, gatewayserver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::StorageContext, sceneserver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::StorageContext, flags_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::StorageSerializeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::StorageSerializeRequest, shard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::StorageSerializeRequest, table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::StorageSerializeRequest, entity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::StorageSerializeRequest, context_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::StorageSerializeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::StorageSerializeResponse, shard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::StorageSerializeResponse, table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::StorageSerializeResponse, entityid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::StorageSerializeResponse, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::StorageSerializeResponse, rc_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::StorageUnserializeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::StorageUnserializeRequest, shard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::StorageUnserializeRequest, table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::StorageUnserializeRequest, entityid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::StorageUnserializeRequest, context_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::StorageUnserializeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::StorageUnserializeResponse, shard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::StorageUnserializeResponse, table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::StorageUnserializeResponse, entityid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::StorageUnserializeResponse, entity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::StorageUnserializeResponse, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::StorageUnserializeResponse, rc_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::protocol::ServerRegisterRequest)},
  { 8, -1, sizeof(::protocol::ServerRegisterResponse)},
  { 15, -1, sizeof(::protocol::ServerRetrieveRequest)},
  { 21, -1, sizeof(::protocol::ServerRetrieveResponse)},
  { 28, -1, sizeof(::protocol::StorageContext)},
  { 37, -1, sizeof(::protocol::StorageSerializeRequest)},
  { 46, -1, sizeof(::protocol::StorageSerializeResponse)},
  { 56, -1, sizeof(::protocol::StorageUnserializeRequest)},
  { 65, -1, sizeof(::protocol::StorageUnserializeResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_ServerRegisterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_ServerRegisterResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_ServerRetrieveRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_ServerRetrieveResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_StorageContext_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_StorageSerializeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_StorageSerializeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_StorageUnserializeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::_StorageUnserializeResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "server.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014server.proto\022\010protocol\032\014entity.proto\"\\"
      "\n\025ServerRegisterRequest\022&\n\007svrtype\030\001 \001(\016"
      "2\025.protocol.SERVER_TYPE\022\014\n\004port\030\002 \001(\005\022\r\n"
      "\005shard\030\003 \001(\005\"L\n\026ServerRegisterResponse\022\n"
      "\n\002rc\030\001 \001(\010\022&\n\007svrtype\030\002 \001(\0162\025.protocol.S"
      "ERVER_TYPE\"\?\n\025ServerRetrieveRequest\022&\n\007s"
      "vrtype\030\001 \001(\0162\025.protocol.SERVER_TYPE\"Q\n\026S"
      "erverRetrieveResponse\022&\n\007svrtype\030\001 \001(\0162\025"
      ".protocol.SERVER_TYPE\022\017\n\007servers\030\002 \003(\004\"["
      "\n\016StorageContext\022\016\n\006client\030\001 \001(\r\022\025\n\rgate"
      "wayserver\030\002 \001(\r\022\023\n\013sceneserver\030\003 \001(\r\022\r\n\005"
      "flags\030\004 \001(\r\"\204\001\n\027StorageSerializeRequest\022"
      "\r\n\005shard\030\001 \001(\r\022\r\n\005table\030\002 \001(\t\022 \n\006entity\030"
      "\003 \001(\0132\020.protocol.Entity\022)\n\007context\030\004 \001(\013"
      "2\030.protocol.StorageContext\"\201\001\n\030StorageSe"
      "rializeResponse\022\r\n\005shard\030\001 \001(\r\022\r\n\005table\030"
      "\002 \001(\t\022\020\n\010entityid\030\003 \001(\004\022)\n\007context\030\004 \001(\013"
      "2\030.protocol.StorageContext\022\n\n\002rc\030\005 \001(\010\"v"
      "\n\031StorageUnserializeRequest\022\r\n\005shard\030\001 \001"
      "(\r\022\r\n\005table\030\002 \001(\t\022\020\n\010entityid\030\003 \001(\004\022)\n\007c"
      "ontext\030\004 \001(\0132\030.protocol.StorageContext\"\245"
      "\001\n\032StorageUnserializeResponse\022\r\n\005shard\030\001"
      " \001(\r\022\r\n\005table\030\002 \001(\t\022\020\n\010entityid\030\003 \001(\004\022 \n"
      "\006entity\030\004 \001(\0132\020.protocol.Entity\022)\n\007conte"
      "xt\030\005 \001(\0132\030.protocol.StorageContext\022\n\n\002rc"
      "\030\006 \001(\010*\265\002\n\006SMSGID\022\017\n\013SMSGID_BASE\020\000\022 \n\032SM"
      "SGID_SERVER_REGISTER_REQ\020\340\324\003\022 \n\032SMSGID_S"
      "ERVER_REGISTER_REP\020\341\324\003\022 \n\032SMSGID_SERVER_"
      "RETRIEVE_REQ\020\342\324\003\022 \n\032SMSGID_SERVER_RETRIE"
      "VE_REP\020\343\324\003\022\"\n\034SMSGID_STORAGE_SERIALIZE_R"
      "EQ\020\352\324\003\022\"\n\034SMSGID_STORAGE_SERIALIZE_REP\020\353"
      "\324\003\022$\n\036SMSGID_STORAGE_UNSERIALIZE_REQ\020\354\324\003"
      "\022$\n\036SMSGID_STORAGE_UNSERIALIZE_REP\020\355\324\003*\263"
      "\001\n\013SERVER_TYPE\022\024\n\020SERVER_TYPE_NONE\020\000\022\027\n\023"
      "SERVER_TYPE_GATEWAY\020\001\022\025\n\021SERVER_TYPE_SCE"
      "NE\020\002\022\027\n\023SERVER_TYPE_CENTRAL\020\003\022\027\n\023SERVER_"
      "TYPE_STORAGE\020\004\022\025\n\021SERVER_TYPE_ROBOT\020\005\022\025\n"
      "\021SERVER_TYPE_ORDER\020\006b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1508);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "server.proto", &protobuf_RegisterTypes);
  ::protobuf_entity_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_server_2eproto
namespace protocol {
const ::google::protobuf::EnumDescriptor* SMSGID_descriptor() {
  protobuf_server_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_2eproto::file_level_enum_descriptors[0];
}
bool SMSGID_IsValid(int value) {
  switch (value) {
    case 0:
    case 60000:
    case 60001:
    case 60002:
    case 60003:
    case 60010:
    case 60011:
    case 60012:
    case 60013:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SERVER_TYPE_descriptor() {
  protobuf_server_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_2eproto::file_level_enum_descriptors[1];
}
bool SERVER_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void ServerRegisterRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerRegisterRequest::kSvrtypeFieldNumber;
const int ServerRegisterRequest::kPortFieldNumber;
const int ServerRegisterRequest::kShardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerRegisterRequest::ServerRegisterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_server_2eproto::scc_info_ServerRegisterRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.ServerRegisterRequest)
}
ServerRegisterRequest::ServerRegisterRequest(const ServerRegisterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&svrtype_, &from.svrtype_,
    static_cast<size_t>(reinterpret_cast<char*>(&shard_) -
    reinterpret_cast<char*>(&svrtype_)) + sizeof(shard_));
  // @@protoc_insertion_point(copy_constructor:protocol.ServerRegisterRequest)
}

void ServerRegisterRequest::SharedCtor() {
  ::memset(&svrtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shard_) -
      reinterpret_cast<char*>(&svrtype_)) + sizeof(shard_));
}

ServerRegisterRequest::~ServerRegisterRequest() {
  // @@protoc_insertion_point(destructor:protocol.ServerRegisterRequest)
  SharedDtor();
}

void ServerRegisterRequest::SharedDtor() {
}

void ServerRegisterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerRegisterRequest::descriptor() {
  ::protobuf_server_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerRegisterRequest& ServerRegisterRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_server_2eproto::scc_info_ServerRegisterRequest.base);
  return *internal_default_instance();
}


void ServerRegisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.ServerRegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&svrtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shard_) -
      reinterpret_cast<char*>(&svrtype_)) + sizeof(shard_));
  _internal_metadata_.Clear();
}

bool ServerRegisterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.ServerRegisterRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .protocol.SERVER_TYPE svrtype = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_svrtype(static_cast< ::protocol::SERVER_TYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 shard = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shard_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.ServerRegisterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.ServerRegisterRequest)
  return false;
#undef DO_
}

void ServerRegisterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.ServerRegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.SERVER_TYPE svrtype = 1;
  if (this->svrtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->svrtype(), output);
  }

  // int32 port = 2;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->port(), output);
  }

  // int32 shard = 3;
  if (this->shard() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->shard(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.ServerRegisterRequest)
}

::google::protobuf::uint8* ServerRegisterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.ServerRegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.SERVER_TYPE svrtype = 1;
  if (this->svrtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->svrtype(), target);
  }

  // int32 port = 2;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->port(), target);
  }

  // int32 shard = 3;
  if (this->shard() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->shard(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.ServerRegisterRequest)
  return target;
}

size_t ServerRegisterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.ServerRegisterRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .protocol.SERVER_TYPE svrtype = 1;
  if (this->svrtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->svrtype());
  }

  // int32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());
  }

  // int32 shard = 3;
  if (this->shard() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->shard());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerRegisterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.ServerRegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerRegisterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerRegisterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.ServerRegisterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.ServerRegisterRequest)
    MergeFrom(*source);
  }
}

void ServerRegisterRequest::MergeFrom(const ServerRegisterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.ServerRegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.svrtype() != 0) {
    set_svrtype(from.svrtype());
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
  if (from.shard() != 0) {
    set_shard(from.shard());
  }
}

void ServerRegisterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.ServerRegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerRegisterRequest::CopyFrom(const ServerRegisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.ServerRegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerRegisterRequest::IsInitialized() const {
  return true;
}

void ServerRegisterRequest::Swap(ServerRegisterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerRegisterRequest::InternalSwap(ServerRegisterRequest* other) {
  using std::swap;
  swap(svrtype_, other->svrtype_);
  swap(port_, other->port_);
  swap(shard_, other->shard_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerRegisterRequest::GetMetadata() const {
  protobuf_server_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerRegisterResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerRegisterResponse::kRcFieldNumber;
const int ServerRegisterResponse::kSvrtypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerRegisterResponse::ServerRegisterResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_server_2eproto::scc_info_ServerRegisterResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.ServerRegisterResponse)
}
ServerRegisterResponse::ServerRegisterResponse(const ServerRegisterResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rc_, &from.rc_,
    static_cast<size_t>(reinterpret_cast<char*>(&svrtype_) -
    reinterpret_cast<char*>(&rc_)) + sizeof(svrtype_));
  // @@protoc_insertion_point(copy_constructor:protocol.ServerRegisterResponse)
}

void ServerRegisterResponse::SharedCtor() {
  ::memset(&rc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&svrtype_) -
      reinterpret_cast<char*>(&rc_)) + sizeof(svrtype_));
}

ServerRegisterResponse::~ServerRegisterResponse() {
  // @@protoc_insertion_point(destructor:protocol.ServerRegisterResponse)
  SharedDtor();
}

void ServerRegisterResponse::SharedDtor() {
}

void ServerRegisterResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerRegisterResponse::descriptor() {
  ::protobuf_server_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerRegisterResponse& ServerRegisterResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_server_2eproto::scc_info_ServerRegisterResponse.base);
  return *internal_default_instance();
}


void ServerRegisterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.ServerRegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&rc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&svrtype_) -
      reinterpret_cast<char*>(&rc_)) + sizeof(svrtype_));
  _internal_metadata_.Clear();
}

bool ServerRegisterResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.ServerRegisterResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool rc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protocol.SERVER_TYPE svrtype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_svrtype(static_cast< ::protocol::SERVER_TYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.ServerRegisterResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.ServerRegisterResponse)
  return false;
#undef DO_
}

void ServerRegisterResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.ServerRegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool rc = 1;
  if (this->rc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->rc(), output);
  }

  // .protocol.SERVER_TYPE svrtype = 2;
  if (this->svrtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->svrtype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.ServerRegisterResponse)
}

::google::protobuf::uint8* ServerRegisterResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.ServerRegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool rc = 1;
  if (this->rc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->rc(), target);
  }

  // .protocol.SERVER_TYPE svrtype = 2;
  if (this->svrtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->svrtype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.ServerRegisterResponse)
  return target;
}

size_t ServerRegisterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.ServerRegisterResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool rc = 1;
  if (this->rc() != 0) {
    total_size += 1 + 1;
  }

  // .protocol.SERVER_TYPE svrtype = 2;
  if (this->svrtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->svrtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerRegisterResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.ServerRegisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerRegisterResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerRegisterResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.ServerRegisterResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.ServerRegisterResponse)
    MergeFrom(*source);
  }
}

void ServerRegisterResponse::MergeFrom(const ServerRegisterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.ServerRegisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rc() != 0) {
    set_rc(from.rc());
  }
  if (from.svrtype() != 0) {
    set_svrtype(from.svrtype());
  }
}

void ServerRegisterResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.ServerRegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerRegisterResponse::CopyFrom(const ServerRegisterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.ServerRegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerRegisterResponse::IsInitialized() const {
  return true;
}

void ServerRegisterResponse::Swap(ServerRegisterResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerRegisterResponse::InternalSwap(ServerRegisterResponse* other) {
  using std::swap;
  swap(rc_, other->rc_);
  swap(svrtype_, other->svrtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerRegisterResponse::GetMetadata() const {
  protobuf_server_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerRetrieveRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerRetrieveRequest::kSvrtypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerRetrieveRequest::ServerRetrieveRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_server_2eproto::scc_info_ServerRetrieveRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.ServerRetrieveRequest)
}
ServerRetrieveRequest::ServerRetrieveRequest(const ServerRetrieveRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  svrtype_ = from.svrtype_;
  // @@protoc_insertion_point(copy_constructor:protocol.ServerRetrieveRequest)
}

void ServerRetrieveRequest::SharedCtor() {
  svrtype_ = 0;
}

ServerRetrieveRequest::~ServerRetrieveRequest() {
  // @@protoc_insertion_point(destructor:protocol.ServerRetrieveRequest)
  SharedDtor();
}

void ServerRetrieveRequest::SharedDtor() {
}

void ServerRetrieveRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerRetrieveRequest::descriptor() {
  ::protobuf_server_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerRetrieveRequest& ServerRetrieveRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_server_2eproto::scc_info_ServerRetrieveRequest.base);
  return *internal_default_instance();
}


void ServerRetrieveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.ServerRetrieveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  svrtype_ = 0;
  _internal_metadata_.Clear();
}

bool ServerRetrieveRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.ServerRetrieveRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .protocol.SERVER_TYPE svrtype = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_svrtype(static_cast< ::protocol::SERVER_TYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.ServerRetrieveRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.ServerRetrieveRequest)
  return false;
#undef DO_
}

void ServerRetrieveRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.ServerRetrieveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.SERVER_TYPE svrtype = 1;
  if (this->svrtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->svrtype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.ServerRetrieveRequest)
}

::google::protobuf::uint8* ServerRetrieveRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.ServerRetrieveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.SERVER_TYPE svrtype = 1;
  if (this->svrtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->svrtype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.ServerRetrieveRequest)
  return target;
}

size_t ServerRetrieveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.ServerRetrieveRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .protocol.SERVER_TYPE svrtype = 1;
  if (this->svrtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->svrtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerRetrieveRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.ServerRetrieveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerRetrieveRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerRetrieveRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.ServerRetrieveRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.ServerRetrieveRequest)
    MergeFrom(*source);
  }
}

void ServerRetrieveRequest::MergeFrom(const ServerRetrieveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.ServerRetrieveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.svrtype() != 0) {
    set_svrtype(from.svrtype());
  }
}

void ServerRetrieveRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.ServerRetrieveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerRetrieveRequest::CopyFrom(const ServerRetrieveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.ServerRetrieveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerRetrieveRequest::IsInitialized() const {
  return true;
}

void ServerRetrieveRequest::Swap(ServerRetrieveRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerRetrieveRequest::InternalSwap(ServerRetrieveRequest* other) {
  using std::swap;
  swap(svrtype_, other->svrtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerRetrieveRequest::GetMetadata() const {
  protobuf_server_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerRetrieveResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerRetrieveResponse::kSvrtypeFieldNumber;
const int ServerRetrieveResponse::kServersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerRetrieveResponse::ServerRetrieveResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_server_2eproto::scc_info_ServerRetrieveResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.ServerRetrieveResponse)
}
ServerRetrieveResponse::ServerRetrieveResponse(const ServerRetrieveResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      servers_(from.servers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  svrtype_ = from.svrtype_;
  // @@protoc_insertion_point(copy_constructor:protocol.ServerRetrieveResponse)
}

void ServerRetrieveResponse::SharedCtor() {
  svrtype_ = 0;
}

ServerRetrieveResponse::~ServerRetrieveResponse() {
  // @@protoc_insertion_point(destructor:protocol.ServerRetrieveResponse)
  SharedDtor();
}

void ServerRetrieveResponse::SharedDtor() {
}

void ServerRetrieveResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerRetrieveResponse::descriptor() {
  ::protobuf_server_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerRetrieveResponse& ServerRetrieveResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_server_2eproto::scc_info_ServerRetrieveResponse.base);
  return *internal_default_instance();
}


void ServerRetrieveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.ServerRetrieveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  servers_.Clear();
  svrtype_ = 0;
  _internal_metadata_.Clear();
}

bool ServerRetrieveResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.ServerRetrieveResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .protocol.SERVER_TYPE svrtype = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_svrtype(static_cast< ::protocol::SERVER_TYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 servers = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_servers())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_servers())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.ServerRetrieveResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.ServerRetrieveResponse)
  return false;
#undef DO_
}

void ServerRetrieveResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.ServerRetrieveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.SERVER_TYPE svrtype = 1;
  if (this->svrtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->svrtype(), output);
  }

  // repeated uint64 servers = 2;
  if (this->servers_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _servers_cached_byte_size_));
  }
  for (int i = 0, n = this->servers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->servers(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.ServerRetrieveResponse)
}

::google::protobuf::uint8* ServerRetrieveResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.ServerRetrieveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.SERVER_TYPE svrtype = 1;
  if (this->svrtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->svrtype(), target);
  }

  // repeated uint64 servers = 2;
  if (this->servers_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _servers_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->servers_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.ServerRetrieveResponse)
  return target;
}

size_t ServerRetrieveResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.ServerRetrieveResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 servers = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->servers_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _servers_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .protocol.SERVER_TYPE svrtype = 1;
  if (this->svrtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->svrtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerRetrieveResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.ServerRetrieveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerRetrieveResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerRetrieveResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.ServerRetrieveResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.ServerRetrieveResponse)
    MergeFrom(*source);
  }
}

void ServerRetrieveResponse::MergeFrom(const ServerRetrieveResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.ServerRetrieveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  servers_.MergeFrom(from.servers_);
  if (from.svrtype() != 0) {
    set_svrtype(from.svrtype());
  }
}

void ServerRetrieveResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.ServerRetrieveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerRetrieveResponse::CopyFrom(const ServerRetrieveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.ServerRetrieveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerRetrieveResponse::IsInitialized() const {
  return true;
}

void ServerRetrieveResponse::Swap(ServerRetrieveResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerRetrieveResponse::InternalSwap(ServerRetrieveResponse* other) {
  using std::swap;
  servers_.InternalSwap(&other->servers_);
  swap(svrtype_, other->svrtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerRetrieveResponse::GetMetadata() const {
  protobuf_server_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StorageContext::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StorageContext::kClientFieldNumber;
const int StorageContext::kGatewayserverFieldNumber;
const int StorageContext::kSceneserverFieldNumber;
const int StorageContext::kFlagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StorageContext::StorageContext()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_server_2eproto::scc_info_StorageContext.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.StorageContext)
}
StorageContext::StorageContext(const StorageContext& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&client_, &from.client_,
    static_cast<size_t>(reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&client_)) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:protocol.StorageContext)
}

void StorageContext::SharedCtor() {
  ::memset(&client_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&client_)) + sizeof(flags_));
}

StorageContext::~StorageContext() {
  // @@protoc_insertion_point(destructor:protocol.StorageContext)
  SharedDtor();
}

void StorageContext::SharedDtor() {
}

void StorageContext::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StorageContext::descriptor() {
  ::protobuf_server_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StorageContext& StorageContext::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_server_2eproto::scc_info_StorageContext.base);
  return *internal_default_instance();
}


void StorageContext::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.StorageContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&client_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&client_)) + sizeof(flags_));
  _internal_metadata_.Clear();
}

bool StorageContext::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.StorageContext)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 client = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gatewayserver = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gatewayserver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 sceneserver = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sceneserver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 flags = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.StorageContext)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.StorageContext)
  return false;
#undef DO_
}

void StorageContext::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.StorageContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 client = 1;
  if (this->client() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->client(), output);
  }

  // uint32 gatewayserver = 2;
  if (this->gatewayserver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gatewayserver(), output);
  }

  // uint32 sceneserver = 3;
  if (this->sceneserver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->sceneserver(), output);
  }

  // uint32 flags = 4;
  if (this->flags() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->flags(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.StorageContext)
}

::google::protobuf::uint8* StorageContext::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.StorageContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 client = 1;
  if (this->client() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->client(), target);
  }

  // uint32 gatewayserver = 2;
  if (this->gatewayserver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gatewayserver(), target);
  }

  // uint32 sceneserver = 3;
  if (this->sceneserver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->sceneserver(), target);
  }

  // uint32 flags = 4;
  if (this->flags() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->flags(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.StorageContext)
  return target;
}

size_t StorageContext::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.StorageContext)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 client = 1;
  if (this->client() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->client());
  }

  // uint32 gatewayserver = 2;
  if (this->gatewayserver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gatewayserver());
  }

  // uint32 sceneserver = 3;
  if (this->sceneserver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sceneserver());
  }

  // uint32 flags = 4;
  if (this->flags() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flags());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StorageContext::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.StorageContext)
  GOOGLE_DCHECK_NE(&from, this);
  const StorageContext* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StorageContext>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.StorageContext)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.StorageContext)
    MergeFrom(*source);
  }
}

void StorageContext::MergeFrom(const StorageContext& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.StorageContext)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.client() != 0) {
    set_client(from.client());
  }
  if (from.gatewayserver() != 0) {
    set_gatewayserver(from.gatewayserver());
  }
  if (from.sceneserver() != 0) {
    set_sceneserver(from.sceneserver());
  }
  if (from.flags() != 0) {
    set_flags(from.flags());
  }
}

void StorageContext::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.StorageContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StorageContext::CopyFrom(const StorageContext& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.StorageContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageContext::IsInitialized() const {
  return true;
}

void StorageContext::Swap(StorageContext* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StorageContext::InternalSwap(StorageContext* other) {
  using std::swap;
  swap(client_, other->client_);
  swap(gatewayserver_, other->gatewayserver_);
  swap(sceneserver_, other->sceneserver_);
  swap(flags_, other->flags_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StorageContext::GetMetadata() const {
  protobuf_server_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StorageSerializeRequest::InitAsDefaultInstance() {
  ::protocol::_StorageSerializeRequest_default_instance_._instance.get_mutable()->entity_ = const_cast< ::protocol::Entity*>(
      ::protocol::Entity::internal_default_instance());
  ::protocol::_StorageSerializeRequest_default_instance_._instance.get_mutable()->context_ = const_cast< ::protocol::StorageContext*>(
      ::protocol::StorageContext::internal_default_instance());
}
void StorageSerializeRequest::clear_entity() {
  if (GetArenaNoVirtual() == NULL && entity_ != NULL) {
    delete entity_;
  }
  entity_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StorageSerializeRequest::kShardFieldNumber;
const int StorageSerializeRequest::kTableFieldNumber;
const int StorageSerializeRequest::kEntityFieldNumber;
const int StorageSerializeRequest::kContextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StorageSerializeRequest::StorageSerializeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_server_2eproto::scc_info_StorageSerializeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.StorageSerializeRequest)
}
StorageSerializeRequest::StorageSerializeRequest(const StorageSerializeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.table().size() > 0) {
    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  if (from.has_entity()) {
    entity_ = new ::protocol::Entity(*from.entity_);
  } else {
    entity_ = NULL;
  }
  if (from.has_context()) {
    context_ = new ::protocol::StorageContext(*from.context_);
  } else {
    context_ = NULL;
  }
  shard_ = from.shard_;
  // @@protoc_insertion_point(copy_constructor:protocol.StorageSerializeRequest)
}

void StorageSerializeRequest::SharedCtor() {
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&entity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shard_) -
      reinterpret_cast<char*>(&entity_)) + sizeof(shard_));
}

StorageSerializeRequest::~StorageSerializeRequest() {
  // @@protoc_insertion_point(destructor:protocol.StorageSerializeRequest)
  SharedDtor();
}

void StorageSerializeRequest::SharedDtor() {
  table_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete entity_;
  if (this != internal_default_instance()) delete context_;
}

void StorageSerializeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StorageSerializeRequest::descriptor() {
  ::protobuf_server_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StorageSerializeRequest& StorageSerializeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_server_2eproto::scc_info_StorageSerializeRequest.base);
  return *internal_default_instance();
}


void StorageSerializeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.StorageSerializeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && entity_ != NULL) {
    delete entity_;
  }
  entity_ = NULL;
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  shard_ = 0u;
  _internal_metadata_.Clear();
}

bool StorageSerializeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.StorageSerializeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 shard = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shard_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string table = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->table().data(), static_cast<int>(this->table().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protocol.StorageSerializeRequest.table"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protocol.Entity entity = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_entity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protocol.StorageContext context = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.StorageSerializeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.StorageSerializeRequest)
  return false;
#undef DO_
}

void StorageSerializeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.StorageSerializeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 shard = 1;
  if (this->shard() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->shard(), output);
  }

  // string table = 2;
  if (this->table().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table().data(), static_cast<int>(this->table().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol.StorageSerializeRequest.table");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->table(), output);
  }

  // .protocol.Entity entity = 3;
  if (this->has_entity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_entity(), output);
  }

  // .protocol.StorageContext context = 4;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_context(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.StorageSerializeRequest)
}

::google::protobuf::uint8* StorageSerializeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.StorageSerializeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 shard = 1;
  if (this->shard() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->shard(), target);
  }

  // string table = 2;
  if (this->table().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table().data(), static_cast<int>(this->table().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol.StorageSerializeRequest.table");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->table(), target);
  }

  // .protocol.Entity entity = 3;
  if (this->has_entity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_entity(), deterministic, target);
  }

  // .protocol.StorageContext context = 4;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_context(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.StorageSerializeRequest)
  return target;
}

size_t StorageSerializeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.StorageSerializeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string table = 2;
  if (this->table().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->table());
  }

  // .protocol.Entity entity = 3;
  if (this->has_entity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *entity_);
  }

  // .protocol.StorageContext context = 4;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  // uint32 shard = 1;
  if (this->shard() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->shard());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StorageSerializeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.StorageSerializeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StorageSerializeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StorageSerializeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.StorageSerializeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.StorageSerializeRequest)
    MergeFrom(*source);
  }
}

void StorageSerializeRequest::MergeFrom(const StorageSerializeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.StorageSerializeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.table().size() > 0) {

    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  if (from.has_entity()) {
    mutable_entity()->::protocol::Entity::MergeFrom(from.entity());
  }
  if (from.has_context()) {
    mutable_context()->::protocol::StorageContext::MergeFrom(from.context());
  }
  if (from.shard() != 0) {
    set_shard(from.shard());
  }
}

void StorageSerializeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.StorageSerializeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StorageSerializeRequest::CopyFrom(const StorageSerializeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.StorageSerializeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageSerializeRequest::IsInitialized() const {
  return true;
}

void StorageSerializeRequest::Swap(StorageSerializeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StorageSerializeRequest::InternalSwap(StorageSerializeRequest* other) {
  using std::swap;
  table_.Swap(&other->table_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(entity_, other->entity_);
  swap(context_, other->context_);
  swap(shard_, other->shard_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StorageSerializeRequest::GetMetadata() const {
  protobuf_server_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StorageSerializeResponse::InitAsDefaultInstance() {
  ::protocol::_StorageSerializeResponse_default_instance_._instance.get_mutable()->context_ = const_cast< ::protocol::StorageContext*>(
      ::protocol::StorageContext::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StorageSerializeResponse::kShardFieldNumber;
const int StorageSerializeResponse::kTableFieldNumber;
const int StorageSerializeResponse::kEntityidFieldNumber;
const int StorageSerializeResponse::kContextFieldNumber;
const int StorageSerializeResponse::kRcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StorageSerializeResponse::StorageSerializeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_server_2eproto::scc_info_StorageSerializeResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.StorageSerializeResponse)
}
StorageSerializeResponse::StorageSerializeResponse(const StorageSerializeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.table().size() > 0) {
    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  if (from.has_context()) {
    context_ = new ::protocol::StorageContext(*from.context_);
  } else {
    context_ = NULL;
  }
  ::memcpy(&entityid_, &from.entityid_,
    static_cast<size_t>(reinterpret_cast<char*>(&rc_) -
    reinterpret_cast<char*>(&entityid_)) + sizeof(rc_));
  // @@protoc_insertion_point(copy_constructor:protocol.StorageSerializeResponse)
}

void StorageSerializeResponse::SharedCtor() {
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&context_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rc_) -
      reinterpret_cast<char*>(&context_)) + sizeof(rc_));
}

StorageSerializeResponse::~StorageSerializeResponse() {
  // @@protoc_insertion_point(destructor:protocol.StorageSerializeResponse)
  SharedDtor();
}

void StorageSerializeResponse::SharedDtor() {
  table_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete context_;
}

void StorageSerializeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StorageSerializeResponse::descriptor() {
  ::protobuf_server_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StorageSerializeResponse& StorageSerializeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_server_2eproto::scc_info_StorageSerializeResponse.base);
  return *internal_default_instance();
}


void StorageSerializeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.StorageSerializeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  ::memset(&entityid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rc_) -
      reinterpret_cast<char*>(&entityid_)) + sizeof(rc_));
  _internal_metadata_.Clear();
}

bool StorageSerializeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.StorageSerializeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 shard = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shard_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string table = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->table().data(), static_cast<int>(this->table().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protocol.StorageSerializeResponse.table"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 entityid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &entityid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protocol.StorageContext context = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool rc = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.StorageSerializeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.StorageSerializeResponse)
  return false;
#undef DO_
}

void StorageSerializeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.StorageSerializeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 shard = 1;
  if (this->shard() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->shard(), output);
  }

  // string table = 2;
  if (this->table().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table().data(), static_cast<int>(this->table().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol.StorageSerializeResponse.table");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->table(), output);
  }

  // uint64 entityid = 3;
  if (this->entityid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->entityid(), output);
  }

  // .protocol.StorageContext context = 4;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_context(), output);
  }

  // bool rc = 5;
  if (this->rc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->rc(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.StorageSerializeResponse)
}

::google::protobuf::uint8* StorageSerializeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.StorageSerializeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 shard = 1;
  if (this->shard() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->shard(), target);
  }

  // string table = 2;
  if (this->table().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table().data(), static_cast<int>(this->table().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol.StorageSerializeResponse.table");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->table(), target);
  }

  // uint64 entityid = 3;
  if (this->entityid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->entityid(), target);
  }

  // .protocol.StorageContext context = 4;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_context(), deterministic, target);
  }

  // bool rc = 5;
  if (this->rc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->rc(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.StorageSerializeResponse)
  return target;
}

size_t StorageSerializeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.StorageSerializeResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string table = 2;
  if (this->table().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->table());
  }

  // .protocol.StorageContext context = 4;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  // uint64 entityid = 3;
  if (this->entityid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->entityid());
  }

  // uint32 shard = 1;
  if (this->shard() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->shard());
  }

  // bool rc = 5;
  if (this->rc() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StorageSerializeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.StorageSerializeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StorageSerializeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StorageSerializeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.StorageSerializeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.StorageSerializeResponse)
    MergeFrom(*source);
  }
}

void StorageSerializeResponse::MergeFrom(const StorageSerializeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.StorageSerializeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.table().size() > 0) {

    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  if (from.has_context()) {
    mutable_context()->::protocol::StorageContext::MergeFrom(from.context());
  }
  if (from.entityid() != 0) {
    set_entityid(from.entityid());
  }
  if (from.shard() != 0) {
    set_shard(from.shard());
  }
  if (from.rc() != 0) {
    set_rc(from.rc());
  }
}

void StorageSerializeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.StorageSerializeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StorageSerializeResponse::CopyFrom(const StorageSerializeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.StorageSerializeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageSerializeResponse::IsInitialized() const {
  return true;
}

void StorageSerializeResponse::Swap(StorageSerializeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StorageSerializeResponse::InternalSwap(StorageSerializeResponse* other) {
  using std::swap;
  table_.Swap(&other->table_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(context_, other->context_);
  swap(entityid_, other->entityid_);
  swap(shard_, other->shard_);
  swap(rc_, other->rc_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StorageSerializeResponse::GetMetadata() const {
  protobuf_server_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StorageUnserializeRequest::InitAsDefaultInstance() {
  ::protocol::_StorageUnserializeRequest_default_instance_._instance.get_mutable()->context_ = const_cast< ::protocol::StorageContext*>(
      ::protocol::StorageContext::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StorageUnserializeRequest::kShardFieldNumber;
const int StorageUnserializeRequest::kTableFieldNumber;
const int StorageUnserializeRequest::kEntityidFieldNumber;
const int StorageUnserializeRequest::kContextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StorageUnserializeRequest::StorageUnserializeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_server_2eproto::scc_info_StorageUnserializeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.StorageUnserializeRequest)
}
StorageUnserializeRequest::StorageUnserializeRequest(const StorageUnserializeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.table().size() > 0) {
    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  if (from.has_context()) {
    context_ = new ::protocol::StorageContext(*from.context_);
  } else {
    context_ = NULL;
  }
  ::memcpy(&entityid_, &from.entityid_,
    static_cast<size_t>(reinterpret_cast<char*>(&shard_) -
    reinterpret_cast<char*>(&entityid_)) + sizeof(shard_));
  // @@protoc_insertion_point(copy_constructor:protocol.StorageUnserializeRequest)
}

void StorageUnserializeRequest::SharedCtor() {
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&context_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shard_) -
      reinterpret_cast<char*>(&context_)) + sizeof(shard_));
}

StorageUnserializeRequest::~StorageUnserializeRequest() {
  // @@protoc_insertion_point(destructor:protocol.StorageUnserializeRequest)
  SharedDtor();
}

void StorageUnserializeRequest::SharedDtor() {
  table_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete context_;
}

void StorageUnserializeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StorageUnserializeRequest::descriptor() {
  ::protobuf_server_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StorageUnserializeRequest& StorageUnserializeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_server_2eproto::scc_info_StorageUnserializeRequest.base);
  return *internal_default_instance();
}


void StorageUnserializeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.StorageUnserializeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  ::memset(&entityid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shard_) -
      reinterpret_cast<char*>(&entityid_)) + sizeof(shard_));
  _internal_metadata_.Clear();
}

bool StorageUnserializeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.StorageUnserializeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 shard = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shard_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string table = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->table().data(), static_cast<int>(this->table().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protocol.StorageUnserializeRequest.table"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 entityid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &entityid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protocol.StorageContext context = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.StorageUnserializeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.StorageUnserializeRequest)
  return false;
#undef DO_
}

void StorageUnserializeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.StorageUnserializeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 shard = 1;
  if (this->shard() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->shard(), output);
  }

  // string table = 2;
  if (this->table().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table().data(), static_cast<int>(this->table().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol.StorageUnserializeRequest.table");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->table(), output);
  }

  // uint64 entityid = 3;
  if (this->entityid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->entityid(), output);
  }

  // .protocol.StorageContext context = 4;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_context(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.StorageUnserializeRequest)
}

::google::protobuf::uint8* StorageUnserializeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.StorageUnserializeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 shard = 1;
  if (this->shard() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->shard(), target);
  }

  // string table = 2;
  if (this->table().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table().data(), static_cast<int>(this->table().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol.StorageUnserializeRequest.table");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->table(), target);
  }

  // uint64 entityid = 3;
  if (this->entityid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->entityid(), target);
  }

  // .protocol.StorageContext context = 4;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_context(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.StorageUnserializeRequest)
  return target;
}

size_t StorageUnserializeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.StorageUnserializeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string table = 2;
  if (this->table().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->table());
  }

  // .protocol.StorageContext context = 4;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  // uint64 entityid = 3;
  if (this->entityid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->entityid());
  }

  // uint32 shard = 1;
  if (this->shard() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->shard());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StorageUnserializeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.StorageUnserializeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StorageUnserializeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StorageUnserializeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.StorageUnserializeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.StorageUnserializeRequest)
    MergeFrom(*source);
  }
}

void StorageUnserializeRequest::MergeFrom(const StorageUnserializeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.StorageUnserializeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.table().size() > 0) {

    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  if (from.has_context()) {
    mutable_context()->::protocol::StorageContext::MergeFrom(from.context());
  }
  if (from.entityid() != 0) {
    set_entityid(from.entityid());
  }
  if (from.shard() != 0) {
    set_shard(from.shard());
  }
}

void StorageUnserializeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.StorageUnserializeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StorageUnserializeRequest::CopyFrom(const StorageUnserializeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.StorageUnserializeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageUnserializeRequest::IsInitialized() const {
  return true;
}

void StorageUnserializeRequest::Swap(StorageUnserializeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StorageUnserializeRequest::InternalSwap(StorageUnserializeRequest* other) {
  using std::swap;
  table_.Swap(&other->table_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(context_, other->context_);
  swap(entityid_, other->entityid_);
  swap(shard_, other->shard_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StorageUnserializeRequest::GetMetadata() const {
  protobuf_server_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StorageUnserializeResponse::InitAsDefaultInstance() {
  ::protocol::_StorageUnserializeResponse_default_instance_._instance.get_mutable()->entity_ = const_cast< ::protocol::Entity*>(
      ::protocol::Entity::internal_default_instance());
  ::protocol::_StorageUnserializeResponse_default_instance_._instance.get_mutable()->context_ = const_cast< ::protocol::StorageContext*>(
      ::protocol::StorageContext::internal_default_instance());
}
void StorageUnserializeResponse::clear_entity() {
  if (GetArenaNoVirtual() == NULL && entity_ != NULL) {
    delete entity_;
  }
  entity_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StorageUnserializeResponse::kShardFieldNumber;
const int StorageUnserializeResponse::kTableFieldNumber;
const int StorageUnserializeResponse::kEntityidFieldNumber;
const int StorageUnserializeResponse::kEntityFieldNumber;
const int StorageUnserializeResponse::kContextFieldNumber;
const int StorageUnserializeResponse::kRcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StorageUnserializeResponse::StorageUnserializeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_server_2eproto::scc_info_StorageUnserializeResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.StorageUnserializeResponse)
}
StorageUnserializeResponse::StorageUnserializeResponse(const StorageUnserializeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.table().size() > 0) {
    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  if (from.has_entity()) {
    entity_ = new ::protocol::Entity(*from.entity_);
  } else {
    entity_ = NULL;
  }
  if (from.has_context()) {
    context_ = new ::protocol::StorageContext(*from.context_);
  } else {
    context_ = NULL;
  }
  ::memcpy(&entityid_, &from.entityid_,
    static_cast<size_t>(reinterpret_cast<char*>(&rc_) -
    reinterpret_cast<char*>(&entityid_)) + sizeof(rc_));
  // @@protoc_insertion_point(copy_constructor:protocol.StorageUnserializeResponse)
}

void StorageUnserializeResponse::SharedCtor() {
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&entity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rc_) -
      reinterpret_cast<char*>(&entity_)) + sizeof(rc_));
}

StorageUnserializeResponse::~StorageUnserializeResponse() {
  // @@protoc_insertion_point(destructor:protocol.StorageUnserializeResponse)
  SharedDtor();
}

void StorageUnserializeResponse::SharedDtor() {
  table_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete entity_;
  if (this != internal_default_instance()) delete context_;
}

void StorageUnserializeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StorageUnserializeResponse::descriptor() {
  ::protobuf_server_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StorageUnserializeResponse& StorageUnserializeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_server_2eproto::scc_info_StorageUnserializeResponse.base);
  return *internal_default_instance();
}


void StorageUnserializeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.StorageUnserializeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && entity_ != NULL) {
    delete entity_;
  }
  entity_ = NULL;
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  ::memset(&entityid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rc_) -
      reinterpret_cast<char*>(&entityid_)) + sizeof(rc_));
  _internal_metadata_.Clear();
}

bool StorageUnserializeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.StorageUnserializeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 shard = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shard_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string table = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->table().data(), static_cast<int>(this->table().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protocol.StorageUnserializeResponse.table"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 entityid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &entityid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protocol.Entity entity = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_entity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protocol.StorageContext context = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool rc = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.StorageUnserializeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.StorageUnserializeResponse)
  return false;
#undef DO_
}

void StorageUnserializeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.StorageUnserializeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 shard = 1;
  if (this->shard() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->shard(), output);
  }

  // string table = 2;
  if (this->table().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table().data(), static_cast<int>(this->table().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol.StorageUnserializeResponse.table");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->table(), output);
  }

  // uint64 entityid = 3;
  if (this->entityid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->entityid(), output);
  }

  // .protocol.Entity entity = 4;
  if (this->has_entity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_entity(), output);
  }

  // .protocol.StorageContext context = 5;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_context(), output);
  }

  // bool rc = 6;
  if (this->rc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->rc(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.StorageUnserializeResponse)
}

::google::protobuf::uint8* StorageUnserializeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.StorageUnserializeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 shard = 1;
  if (this->shard() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->shard(), target);
  }

  // string table = 2;
  if (this->table().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table().data(), static_cast<int>(this->table().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol.StorageUnserializeResponse.table");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->table(), target);
  }

  // uint64 entityid = 3;
  if (this->entityid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->entityid(), target);
  }

  // .protocol.Entity entity = 4;
  if (this->has_entity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_entity(), deterministic, target);
  }

  // .protocol.StorageContext context = 5;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_context(), deterministic, target);
  }

  // bool rc = 6;
  if (this->rc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->rc(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.StorageUnserializeResponse)
  return target;
}

size_t StorageUnserializeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.StorageUnserializeResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string table = 2;
  if (this->table().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->table());
  }

  // .protocol.Entity entity = 4;
  if (this->has_entity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *entity_);
  }

  // .protocol.StorageContext context = 5;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  // uint64 entityid = 3;
  if (this->entityid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->entityid());
  }

  // uint32 shard = 1;
  if (this->shard() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->shard());
  }

  // bool rc = 6;
  if (this->rc() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StorageUnserializeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.StorageUnserializeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StorageUnserializeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StorageUnserializeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.StorageUnserializeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.StorageUnserializeResponse)
    MergeFrom(*source);
  }
}

void StorageUnserializeResponse::MergeFrom(const StorageUnserializeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.StorageUnserializeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.table().size() > 0) {

    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  if (from.has_entity()) {
    mutable_entity()->::protocol::Entity::MergeFrom(from.entity());
  }
  if (from.has_context()) {
    mutable_context()->::protocol::StorageContext::MergeFrom(from.context());
  }
  if (from.entityid() != 0) {
    set_entityid(from.entityid());
  }
  if (from.shard() != 0) {
    set_shard(from.shard());
  }
  if (from.rc() != 0) {
    set_rc(from.rc());
  }
}

void StorageUnserializeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.StorageUnserializeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StorageUnserializeResponse::CopyFrom(const StorageUnserializeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.StorageUnserializeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageUnserializeResponse::IsInitialized() const {
  return true;
}

void StorageUnserializeResponse::Swap(StorageUnserializeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StorageUnserializeResponse::InternalSwap(StorageUnserializeResponse* other) {
  using std::swap;
  table_.Swap(&other->table_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(entity_, other->entity_);
  swap(context_, other->context_);
  swap(entityid_, other->entityid_);
  swap(shard_, other->shard_);
  swap(rc_, other->rc_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StorageUnserializeResponse::GetMetadata() const {
  protobuf_server_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protocol
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::ServerRegisterRequest* Arena::CreateMaybeMessage< ::protocol::ServerRegisterRequest >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::ServerRegisterRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::ServerRegisterResponse* Arena::CreateMaybeMessage< ::protocol::ServerRegisterResponse >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::ServerRegisterResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::ServerRetrieveRequest* Arena::CreateMaybeMessage< ::protocol::ServerRetrieveRequest >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::ServerRetrieveRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::ServerRetrieveResponse* Arena::CreateMaybeMessage< ::protocol::ServerRetrieveResponse >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::ServerRetrieveResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::StorageContext* Arena::CreateMaybeMessage< ::protocol::StorageContext >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::StorageContext >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::StorageSerializeRequest* Arena::CreateMaybeMessage< ::protocol::StorageSerializeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::StorageSerializeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::StorageSerializeResponse* Arena::CreateMaybeMessage< ::protocol::StorageSerializeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::StorageSerializeResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::StorageUnserializeRequest* Arena::CreateMaybeMessage< ::protocol::StorageUnserializeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::StorageUnserializeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::StorageUnserializeResponse* Arena::CreateMaybeMessage< ::protocol::StorageUnserializeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::StorageUnserializeResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
